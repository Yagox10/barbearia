{"version":3,"sources":["settings.js","components/logo/App.js","components/unvailable/App.js","components/logo/index.js","components/tela-inicial/App.js","functions.js","components/http/index.js","components/http/App.js","components/form/App.js","components/frame/App.js","components/navs/App.js","components/navs/index.js","components/aside/index.js","components/aside/App.js","App.js","serviceWorker.js","index.js"],"names":["basename","apiUrl","peopleUrl","productsUrl","paymentsUrl","scopeName","scope","navigation","text","url","icon","getInit","body","method","mode","headers","JSON","stringify","props","className","onClick","ev","href","window","location","App","width","unPrefixObject","object","string","output","i","split","responseWindow","message","color","alert","this","init","fetch","then","r","json","j","setState","propName","responseHandler","catch","e","errorHandler","console","warn","newProps","obj","listOfProperties","keep","inList","outList","forEach","x","hasOwnProperty","filterObj","state","React","cloneElement","Children","only","children","Component","NewOrder","value","description","pair","map","y","id","label","fullName","onChange","v","updateState","customerId","employeeId","name","service","options","paymentsModes","sum","disabled","obs","target","placeholder","submitHandler","NewProduct","price","productsData","type","col","key","SeeWithoutPrefix","data","preppend","k","append","length","preppendHander","fields","appendHandler","NewCustomer","birthday","phone","email","address","doc","SeeUsers","SeeProducts","SeeOrders","main","path","render","component","Home","Unvailable","sidebar","sidebarPosition","header","containerClassName","bottombar","handleSidebar","PlaceholderNav","style","height","nav","items","to","DesktopNav","minWidth","handleChildren","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f44cf86c.chunk.js","sourcesContent":["/**\n * ORÇA AGORA BACKEND ROUTES\n */\nexport const basename = \"http://localhost/dearjohn/backend\";\n\nexport const apiUrl = basename + \"/api\";\nexport const peopleUrl = apiUrl + \"/people\";\nexport const productsUrl = apiUrl + \"/products\";\nexport const ordersUrl = apiUrl + \"/orders\";\nexport const paymentsUrl = apiUrl + \"/payments\";\nexport const readPaymentsUrl = \"/payments\";\n\nexport const scopeName = scope => {\n    switch ( scope ) {\n        case \"provider\":\n            return \"Fornecedor\";\n        case \"medium\":\n            return \"Mídia\";\n        case \"dealer\":\n            return \"Dealer\";\n        case \"employee\":\n            return \"Funcionário\";\n        case \"operator\":\n            return \"Operador\";\n        case \"financial\":\n            return \"Financeiro\";\n        case \"master\":\n            return \"Mestre\";\n        case \"partner\":\n            return \"Sócio\";\n        case \"customer\":\n            return \"Cliente\";\n        case \"service\":\n            return \"Serviço\";\n        case \"product\":\n            return \"Produto\";\n        default:\n            return \"\";\n    }\n}\n\nexport const navigation = [\n    {\n        \"text\": \"Início\",\n        \"url\": \"/\",\n        \"icon\": \"fas fa-home\",\n    },\n    {\n        \"text\": \"Novo Funcionário\",\n        \"url\": \"/novo-funcionario\",\n        \"icon\": \"fas fa-user-plus\",\n    },\n    {\n        text: \"Listar Funcionário\",\n        url: \"/listar-funcionarios\",\n        icon: \"fas fa-users\"\n    },\n    {\n        \"text\": \"Novo Cliente\",\n        \"url\": \"/novo-cliente\",\n        \"icon\": \"fas fa-user-plus\",\n    },\n    {\n        text: \"Listar Clientes\",\n        url: \"/listar-clientes\",\n        icon: \"fas fa-users\"\n    },\n    {\n        text: \"Novo Produto\",\n        url: \"/novo-produto\",\n        icon: \"fas fa-plus\"\n    },\n    {\n        text: \"Listar Produtos\",\n        url: \"/listar-produtos\",\n        icon: \"fas fa-list-ul\"\n    },\n    {\n        text: \"Novo Serviço\",\n        url: \"/novo-servico\",\n        icon: \"fas fa-plus\"\n    },\n    {\n        text: \"Listar Serviços\",\n        url: \"/listar-servicos\",\n        icon: \"fas fa-list-ul\"\n    },\n    {\n        text: \"Novo Pedido\",\n        url: \"/novo-pedido\",\n        icon: \"fas fa-file\"\n    },\n    {\n        text: \"Listar Pedidos\",\n        url: \"/listar-pedidos\",\n        icon: \"fas fa-copy\"\n    },\n]\n\nexport const getInit = ( body, method = \"POST\" ) => {\n    return {\n        method: method,\n        mode: \"cors\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify( body )\n    }\n}","import React from 'react';\n\nexport default function ( props ) {\n\treturn (\n        <figure\n            className={ props.className }\n            onClick={ ev => { if ( props.href ) { window.location.href = props.href } } }\n        >\n            {/* <img\n                src={ basename + \"/images/logo.png\"}\n                alt=\"Orça Agora\"\n                width={ props.width }\n                className={ props.className }\n            /> */}\n            <div>\n                <span className=\"mx-1\">\n                    <i className=\"fas fa-cut\"></i>\n                </span>\n                <span>\n                    DEAR JOHN\n                </span>\n            </div>\n        </figure>\n    );\n}","import React from 'react';\nimport Logo from '../logo/App';\n\n\nexport default function App () {\n    return(\n        <div className=\"py-4 d-flex\">\n            <div className=\"m-auto pt-4 text-center\">\n                <Logo\n                    width=\"260\"\n                />\n                <span className=\"text-secondary font-weight-bold\">Indisponível no momento.</span>\n            </div>\n        </div>\n    )\n}","import App from './App';\n\nexport default App;","import React from 'react';\nimport Logo from '../logo';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nexport default function App () {\n    return (\n        <div>\n            <div className=\"d-flex p-3\"> \n                <Logo className=\"m-auto p-2 border border-secondary\" />\n            </div> \n            <div>\n                <h2 className=\"text-center m-auto text-secondary\">\n                    SISTEMA ADMINSTRATIVO\n                </h2>\n\n                <p className=\"text-center mx-auto px-5 py-3 text-muted\">\n                    Escolha onde deseja operar no menu ao lado.\n                </p>\n            </div>\n        </div>\n    );\n}","/**\n * \n * ARRAY AND OBJECTS\n * \n */\nexport function unPrefix ( string ) {\n    return string.split( \"_\" )[ 1 ];\n}\nexport function unPrefixObject ( object ) {\n    let output = {};\n    for ( let i in object ) { // eslint-disable-line no-unused-vars\n        output[ unPrefix( i ) ] = object[ i ];\n        \n    }\n    return output;\n}\nexport function getBasename () {\n    const hiddenTag = document.querySelector( \"input[name=basename]\" );\n    return ( hiddenTag ? hiddenTag.value : \"http://orcaagora.com.br\" );\n}\n\nexport function isEmpty( obj ) {\n    for( let key in obj ) { // eslint-disable-line no-unused-vars\n        if( obj.hasOwnProperty( key ) ) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function filterObj ( obj, listOfProperties, keep = false ) {\n    let inList = {};\n    let outList = {};\n    for ( let i in obj ) { // eslint-disable-line no-unused-vars\n        outList[ i ] = obj[ i ];\n    }\n    listOfProperties.forEach( x => {\n        if ( obj.hasOwnProperty( x ) ) {\n            inList[ x ] = obj[ x ];\n            delete outList[ x ];\n        }\n    } )\n    return ( keep ? inList : outList );\n}\n\nexport function noDuplicates ( array ) {\n    let output = [];\n    for ( let i of array ) { // eslint-disable-line no-unused-vars\n        if ( output.indexOf( i ) === -1 ) {\n            output.push( i );\n        }\n    }\n    return output;\n}\n\n// \nexport function twoDigits ( number ) {\n    return ( \"0\" + number ).slice( -2 );\n}\nexport function getDate () {\n    const date = new Date();\n    return [ date.getFullYear(), twoDigits( date.getMonth() ), twoDigits( date.getDay() ) ].join( \"-\" );\n}\nexport function getTime () {\n    const date = new Date();\n    return [ twoDigits( date.getHours() ), twoDigits( date.getMinutes() ), twoDigits( date.getSeconds() ) ].join( \":\" );\n}\n\nexport function wait ( timeInMiliSeconds ) {\n    var d = new Date();\n    var d2 = null;\n    do { d2 = new Date(); }\n    while( d2-d < timeInMiliSeconds );\n}\n\nexport const publicText = string => {\n    switch ( string ) {\n        case \"provider\":\n            return \"fornecedor\";\n        case \"medium\":\n            return \"mídia\";\n        case \"employee\":\n            return \"operador\";\n        case \"dealer\":\n            return \"dealer\";\n        default:\n            return \"Sem regitro para público.\";\n    }\n}\n\nexport const checkLastChar = ( string, regex ) => {\n    const match = new RegExp( regex ).test( string[ string.length - 1 ] );\n    if ( ! match ) {\n        return string.substr( 0, string.length - 1 );\n    } else {\n        return string;\n    }\n}\n\nexport const isMobile = mobileNumber => {\n    if ( ! mobileNumber.match( /[0-9]{11}/ ) ) {\n        return false\n    }\n    return true;\n}\n\nexport function getPropsFromDocument ( tagId = \"#props\" ) {\n    if ( document.querySelector( tagId ) ) {\n        return JSON.parse( document.querySelector( tagId ).value );\n    } else {\n        return {}\n    }\n}\n\nexport function navTo ( userScreen ) {\n    const l = window.location;\n    const origin = l.origin;\n    const params = l.pathname.split( \"/\" );\n    const userIndex = l.pathname.split( \"/\" ).indexOf( \"user\" );\n    params[ userIndex + 2 ] = userScreen\n    window.location.href = origin + params.join( \"/\" );\n}\n\nexport function noUnicode ( string ) {\n    return decodeURIComponent( JSON.parse( '\"' + string + '\"' ) );\n}\n\nexport function condenseObjs( objArray ) {\n    let output = {};\n    objArray.forEach( obj => {\n        for ( let u in obj ) { // eslint-disable-line no-unused-vars\n            output[ u ] = obj[ u ];\n        }\n    } );\n    return output;\n}\n\nexport function responseWindow ( message, color ) {\n    alert( message );\n}\n\nexport const getByQuery = ( selector ) => document.querySelector( selector );\nexport const valueToObject = element => JSON.parse( element.value );","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport {\n\tfilterObj\n} from '../../functions';\n\n/**\n * \n * PROPS\n * url: URL string to fetch\n * init (optional): init object for fetch API\n * propName: string name of props to pass state through\n * responseHandler (optional): ( json ) => any\n * errorHandler (optional): ( exception ) => void\n */\nexport default class App extends React.Component {\n\tcomponentDidMount () {\n\t\tlet promise;\n\t\tif ( this.props.init ) {\n\t\t\tpromise = fetch( this.props.url, this.props.init );\n\t\t} else {\n\t\t\tpromise = fetch( this.props.url );\n\t\t}\n\t\tpromise.then( r => r.json() )\n\t\t.then( j => {\n\t\t\tif ( j ) {\n\t\t\t\tthis.setState( { [this.props.propName]: ( this.props.responseHandler ? this.props.responseHandler( j ) : j ) } )\n\t\t\t}\n\t\t} )\n\t\t.catch( e => ( this.props.errorHandler ? this.props.errorHandler( e ) : console.warn( e ) ) )\n\t}\n\trender () {\n\t\tlet newProps = filterObj( this.props, [ \"url\", \"init\", \"propName\", \"responseHandler\", \"errorHandler\" ] );\n\t\tif ( this.state ) {\n\t\t\tnewProps[ this.props.propName ] = this.state[ this.props.propName ];\n\t\t}\n\t\treturn React.cloneElement(\n\t\t\tReact.Children.only( this.props.children ),\n\t\t\tnewProps\n\t\t)\n\t}\n}\n","import React, {\n    Component\n} from \"react\";\nimport Select from 'react-select';\n\nimport {\n    peopleUrl,\n    productsUrl,\n    getInit,\n    paymentsUrl,\n    scopeName,\n} from '../../settings';\nimport {\n    responseWindow,\n    unPrefixObject\n} from \"../../functions\";\n\nimport Http from '../http';\n\n/**\n * \n */\n\nconst orderServices = [\n    {\n        value: 1,\n        label: \"Corte Tesoura\",\n    },\n    {\n        value: 2,\n        label: \"Corte na Máquina\",\n    },\n    {\n        value: 3,\n        label: \"Barba Modelada\",\n    },\n    {\n        value: 4,\n        label: \"Corte na Tesoura e Barba Modelada\",\n    }\n]\n\n\nexport class NewOrder extends Component {\n    state = {\n        value: \"\",\n        description: \"\",\n        mode: \"\",\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( paymentsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Registro de Pedido\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Cliente\n                            </small>\n                            <Http\n                                url={ peopleUrl + \"?person_scope=customer\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.id, label: y.fullName } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { customerId: v.label } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Funcionário/a\n                            </small>\n                            <Http\n                                url={ peopleUrl + \"?person_scope=employee\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.id, label: y.fullName } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { employeeId: v.label } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    {/*  */}\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Serviço\n                            </small>\n                            <Http\n                                url={ productsUrl + \"?product_scope=service\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.name, label: y.name } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { service: v.value } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Produtos\n                            </small>\n                            <button className=\"btn btn-block btn-primary\"\n                                onClick={ ev => alert( \"em desenvolvimento\" ) }\n                            >\n                                <i className=\"fas fa-plus\"></i>\n                                <span className=\"mx-1\">\n                                    Adicionar Produtos\n                                </span>\n                            </button>\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Modo de Pagamento\n                            </small>\n                            <Select\n                                options={ paymentsModes }\n                                onChange={ v => this.updateState( { mode: v.value } ) }\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Valor Total:\n                            </small>\n                            <input\n                                value={ this.state.sum }\n                                disabled\n                                className=\"form-control\"\n                            />\n                        </label>\n                    </div>\n                    {/*  */}\n                    <div\n                        className=\"col-12\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Observação <small className=\"text-muted\">(opcional)</small>\n                            </small>\n                            <textarea\n                                className=\"form-control\"\n                                value={ this.state.obs }\n                                onChange={ ev => this.updateState( { obs: ev.target.value } ) }\n                                placeholder=\"Descreva alguma situação fora do comum que o sistema não possa identificar de forma automática pelas operações padrão.\"\n                            ></textarea>\n                        </label>\n                    </div>\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Registrar Pedido\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * \n */\nconst paymentsModes = [\n    {\n        value: \"Crédito\",\n        label: \"Crédito\",\n    },\n    {\n        value: \"Débito\",\n        label: \"Débito\",\n    },\n    {\n        value: \"Dinheiro\",\n        label: \"Dinheiro\",\n    }\n]\nexport class NewPayment extends Component {\n    state = {\n        value: \"\",\n        description: \"\",\n        mode: \"\",\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( paymentsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Dados do Pagamento\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Valor\n                            </small>\n                            <input\n                                type=\"text\"\n                                value={ this.state.value }\n                                onChange={ ev => this.updateState( { value: ev.target.value } ) }\n                                className=\"form-control\"\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Modo de Pagamento\n                            </small>\n                            <Select\n                                options={ paymentsModes }\n                                onChange={ v => this.updateState( { mode: v.value } ) }\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Descrição ou observação\n                            </small>\n                            <textarea\n                                className=\"form-control\"\n                                value={ this.state.description }\n                                onChange={ ev => this.updateState( { description: ev.target.value } ) }\n                            ></textarea>\n                        </label>\n                    </div>\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Registrar Pagamento\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * \n */\nexport class NewProduct extends Component {\n    state = {\n        price: \"\",\n        description: \"\",\n        name: \"\",\n        scope: this.props.scope,\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( productsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        const productsData = [\n            {\n                name: \"name\",\n                text: \"Nome do \" + scopeName( this.props.scope ),\n                type: \"text\",\n                col: \"6\",\n            },\n            {\n                name: \"price\",\n                text: \"Preço\",\n                type: \"text\",\n                col: \"6\",\n            },\n            {\n                name: \"description\",\n                text: \"Breve descrição\",\n                type: \"text\",\n                col: \"12\",\n            }\n        ]\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Cadastre seu { scopeName( this.props.scope ) }\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        productsData.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Cadastrar { scopeName( this.props.scope ) }\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n/**\n * url: string url\n * fields: array of { component: JSX* }; *: must render data as children (JSX just a frame)\n * append: JSX append to each row\n * preppend: list header array of strings\n */\nexport class SeeWithoutPrefix extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount () {\n        fetch( this.props.url )\n        .then( r => r.json() )\n        .then( j => this.setState( { data: j.map( x => unPrefixObject( x ) ) } ) );\n    }\n    preppendHander () {\n        if ( this.props.preppend ) {\n            return (\n                <li className=\"list-group-item d-flex\">\n                    {\n                        this.props.preppend.map( ( y, k ) => {\n                            return ( \n                                <div\n                                    key={ k }\n                                    className=\"m-auto py-1\"\n                                >\n                                    { y }\n                                </div>\n                            )\n                        } )\n                    }\n                </li>\n            )\n        }\n    }\n    appendHandler ( x ) {\n        if ( this.props.append ) {\n            if ( x ) {\n                return (\n                    <div className=\"ml-auto my-auto\">\n                        { this.props.append( x ) }\n                    </div>\n                );\n            }\n        }\n    }\n    render () {\n        if ( this.state.data.length > 0 ) {\n            return (\n                <ul\n                    className=\"list-group\"\n                >\n                    { this.preppendHander() }\n                    {\n                        this.state.data.map( ( x, i ) => {\n                            return(\n                                <li\n                                    key={ i }\n                                    className=\"list-group-item d-flex\"\n                                >\n                                    {\n                                        this.props.fields.map( ( y, k ) => {\n                                            return ( \n                                                <td\n                                                    key={ k }\n                                                    className=\"m-auto py-2\"\n                                                >\n                                                    { x[ y ] }\n                                                </td>\n                                            )\n                                        } ) \n                                    }\n                                    { this.appendHandler( x ) }\n                                </li>\n                            );\n                        } )\n                    }\n                </ul>\n            );\n        } else {\n            return <div>Sem registros.</div>\n        }\n    }\n}\n\n/**\n * \n */\nconst data = [\n    {\n        name: \"fullName\",\n        text: \"Nome Completo\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"birthday\",\n        text: \"Nascimento\",\n        type: \"date\",\n        col: \"6\",\n    },\n    {\n        name: \"phone\",\n        text: \"Telefone\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"email\",\n        text: \"email\",\n        type: \"email\",\n        col: \"6\",\n    },\n    {\n        name: \"address\",\n        text: \"Endereço\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"doc\",\n        text: \"Documento\",\n        type: \"text\",\n        col: \"6\",\n    },\n]\n\nexport class MoreGeneral extends Component {\n    state = {\n        fullName: \"\",\n        birthday: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        scope: this.props.scope,\n        doc: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( peopleUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Cadastro realizado com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container p-0\">\n                <div className=\"form-group row\">\n                    {\n                        data.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class NewCustomer extends Component {\n    state = {\n        fullName: \"\",\n        birthday: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        scope: this.props.scope,\n        doc: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( peopleUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Cadastro realizado com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-12\">\n                        <h4 className=\"mb-3\">\n                            Cadastrando <span className={ \"font-weight-bold text-\" + ( this.props.scope === \"employee\" ? \"danger\" : \"success\" ) }>{ scopeName( this.props.scope ) }</span>\n                        </h4>\n                    </div>\n                    {\n                        data.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Confirmar cadastro\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {\n    Component,\n    cloneElement\n} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport {\n    ordersUrl,\n    productsUrl,\n    paymentsUrl,\n    peopleUrl\n} from '../../settings';\n\nimport Unvailable from '../unvailable/App';\nimport Home from '../tela-inicial/App';\nimport NewUser, {\n    NewProduct,\n    SeeWithoutPrefix,\n    NewPayment,\n    NewOrder\n} from '../form/App';\n\n\nconst SeeUsers = ( props ) => (\n    <div>\n        <SeeWithoutPrefix\n            url={ peopleUrl + \"?person_scope=\" + props.scope }\n            fields={ [ \"fullName\", \"email\", \"phone\" ] }\n            preppend={ [ \"Nome\", \"email\", \"Telefone\" ] }\n            // append={ x => (\n            //     <a className=\"text-info small\"\n            //         onClick={ ev => alert( \"...\" )}\n            //     >\n            //         <i className=\"fas fa-list\"></i>\n            //         <span className=\"mx-1\">Detalhes</span>\n            //     </a>\n            // ) }\n        ></SeeWithoutPrefix>\n    </div>\n);\nconst SeeProducts = ( props ) => (\n    <div>\n        <SeeWithoutPrefix\n            url={ productsUrl + \"?product_scope=\" + props.scope }\n            fields={ props.fields }\n            preppend={ props.preppend }\n            // append={ x => (\n            //     <a className=\"text-info small\"\n            //         onClick={ ev => alert( \"...\" )}\n            //     >\n            //         <i className=\"fas fa-list\"></i>\n            //         <span className=\"mx-1\">Detalhes</span>\n            //     </a>\n            // ) }\n        ></SeeWithoutPrefix>\n    </div>\n);\nconst SeeOrders = () => (\n    <div>\n        <SeeWithoutPrefix\n            url={ paymentsUrl }\n            fields={ [ \"date\", \"mode\", \"customerId\", \"employeeId\" ] }\n            preppend={ [ \"Data\", \"Modo de Pagamento\", \"Cliente\", \"Funcionário/a\" ] }\n            // append={ x => (\n            //     <a className=\"text-info small\"\n            //         onClick={ ev => alert( \"...\" )}\n            //     >\n            //         <i className=\"fas fa-list\"></i>\n            //         <span className=\"mx-1\">Detalhes</span>\n            //     </a>\n            // ) }\n        ></SeeWithoutPrefix>\n    </div>\n);\n\nexport default class App extends Component {\n    handleSidebar () {\n        let output;\n        const main = (\n            <div className=\"w-100 p-2\">\n                <main className=\"d-block mb-5 pb-4 mb-sm-0 pb-sm-0\">\n                    <Switch>\n                        <Route\n                            path=\"/novo-funcionario\"\n                            render={ () => <NewUser scope=\"employee\" /> }\n                        />\n                        <Route\n                            path=\"/listar-funcionarios\"\n                            render={ () => <SeeUsers scope=\"employee\" /> }\n                        />\n\n                        <Route\n                            path=\"/novo-cliente\"\n                            render={ () => <NewUser scope=\"customer\" /> }\n                        />\n                        <Route\n                            path=\"/listar-clientes\"\n                            render={ () => <SeeUsers scope=\"customer\" /> }\n                        />\n                        {/*  */}\n                        <Route\n                            path=\"/novo-produto\"\n                            render={ () => <NewProduct scope=\"product\"/> }\n                        />\n                        <Route\n                            path=\"/listar-produtos\"\n                            render={ () => <SeeProducts\n                                scope=\"product\"\n                                fields={ [ \"name\", \"price\", \"stock\" ] }\n                                preppend={ [ <span>Nome</span>, <span>Preço</span>, <span>Estoque</span> ] }\n                            /> }\n                        />\n                        <Route\n                            path=\"/novo-servico\"\n                            render={ () => <NewProduct scope=\"service\" /> }\n                        />\n                        <Route\n                            path=\"/listar-servicos\"\n                            render={ () => <SeeProducts\n                                scope=\"service\"\n                                fields={ [ \"name\", \"price\" ] }\n                                preppend={ [ <span>Nome</span>, <span>Preço</span>, <span></span> ] }\n                            /> }\n                        />\n                        {/*  */}\n                        <Route path=\"/novo-pedido\" component={ NewOrder } />\n                        <Route path=\"/listar-pedidos\" component={ SeeOrders } />\n\n                        <Route path=\"/\" component={ Home } />\n                        <Route component={ Unvailable } />\n                    </Switch>\n                </main>\n            </div>\n        );\n        if ( this.props.sidebar ) {\n            switch ( this.props.sidebarPosition ) {\n                case \"right\":\n                    output = [ main, this.props.sidebar ];\n                    break;\n                default:\n                    output = [ this.props.sidebar, main ];\n            }\n        } else {\n            output = main;\n        }\n        return output.map( ( x, i ) => cloneElement( x, { key: i } ) );\n    }\n    render() {\n        return (\n            <Router>\n            \n                { this.props.header }\n    \n                <div className={ \"d-flex\" + ( this.props.containerClassName ? this.props.containerClassName : \"\" ) }>\n                    \n                    { this.props.bottombar }\n                    \n                    { this.handleSidebar() }\n                    \n                </div>\n    \n            </Router>\n        );\n    }\n}","import React, {\n    Component\n} from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport {\n    navUrl,\n    accountsUrl\n} from '../../settings';\nimport {\n    getByQuery\n} from '../../functions';\n\nexport function PlaceholderNav () {\n    return (\n        <li className=\"ml-3 mb-3 d-flex\">\n            <span className=\"mr-1\">\n                <div className=\"bg-primary rounded-circle\" style={ { width: \"20px\", height: \"20px\" } }></div>\n            </span>\n            <span className=\"mx-2\">\n                <div className=\"bg-primary rounded\" style={ { width: \"100px\", height: \"20px\" } }></div>\n            </span>\n        </li>\n    )\n}\nexport function DesktopNav ( nav ) {\n    if ( nav ) {\n        return (\n            <nav>\n                <ul className=\"list-unstyled\">\n                    { nav.map( ( x, i ) => {\n                        return(\n                            <li className=\"ml-3 mb-3\" key={ i }>\n                                <Link to={ x.url }>\n                                    <span className=\"mr-1\">\n                                        <i className={ x.icon }></i>\n                                    </span>\n                                    <small>\n                                        { x.text }\n                                    </small>\n                                </Link>\n                            </li>\n                        )\n                    } ) }\n                </ul>\n            </nav>\n        );\n    } else {\n        return (\n            <ul className=\"list-unstyled\">\n                { [0,1,2,3,4].map( i => <PlaceholderNav key={ i } /> ) }\n            </ul>\n        );\n    }\n}\nexport function MyMobNav ( nav ) {\n    return (\n        <nav className=\"container\">\n            <ul className=\"list-unstyled row text-center\">\n                { nav.map( ( x, i ) => {\n                    return(\n                        <li className=\"col-6 p-1\" key={ i }>\n                            <Link to={ x.url }>\n                                <div>\n                                    <i className={ x.icon }></i>\n                                </div>\n                                <small>\n                                    { x.text }\n                                </small>\n                            </Link>\n                        </li>\n                    )\n                } ) }\n            </ul>\n        </nav>\n    )\n}\n\nexport default function ( props ) {\n    switch( props.scope ) {\n        case \"mobile\":\n            return MyMobNav( props.items );\n        case \"desktop\":\n            return DesktopNav( props.items );\n        default:\n            return (\n                <ul className=\"list-unstyled\">\n                    {\n                        [ 0, 1, 2, 3, 4 ].map( i => <PlaceholderNav key={ i } /> )\n                    }\n                </ul>\n            );\n    }\n}","import App from './App';\n\nexport default App;","import App from './App';\n\nexport default App;","import React, {\n    Component,\n    Fragment\n} from 'react';\nimport Nav from '../navs';\n\nexport default class extends Component {\n    handleChildren () {\n        if ( this.props.children ) {\n            return (\n                <Fragment>\n                    { this.props.children }\n                    <hr className=\"mx-4\" />\n                </Fragment>\n            )\n        }\n    }\n    render () {\n        return (\n            <aside\n                className={ \"d-none d-sm-block w-25 h-100 \" + this.props.className }\n                style={ { minWidth: \"162px\" } }\n            >\n                { this.handleChildren() }\n\n                <Nav\n                    scope=\"desktop\"\n                    items={ this.props.nav }\n                />\n                \n            </aside>\n        )\n    }\n}","import React from 'react';\n\nimport {\n\tnavigation,\n\tbasename,\n} from './settings';\n\nimport Frame from './components/frame/App';\nimport Aside from './components/aside';\nimport Logo from './components/logo';\n\nimport './index.css';\n\nconst sidebar = (\n\t<Aside\n\t\tnav={ navigation }\n\t\tclassName=\"bg-secondary border-right pt-2 pb-5\"\n\t>\n\t\t<div className=\"my-4\">\n\t\t\t<Logo\n\t\t\t\twidth=\"85\"\n\t\t\t\tclassName=\"d-flex justify-content-center text-primary border border-primary p-2 mx-2\"\n\t\t\t\thref={ basename }\n\t\t\t/>\n\t\t</div>\n\t</Aside>\n);\n\nexport default function () {\n\treturn (\n\t\t<Frame\n\t\t\tnav={ navigation }\n\t\t\tsidebar={ sidebar }\n\t\t\tsidebarPosition=\"left\"\n\t\t/>\n\t)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById( 'root' )\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}