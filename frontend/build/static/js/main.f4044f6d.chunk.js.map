{"version":3,"sources":["settings.js","components/logo/App.js","components/unvailable/App.js","components/logo/index.js","functions.js","components/tela-inicial/App.js","components/http/index.js","components/http/App.js","components/form/App.js","components/frame/App.js","components/navs/App.js","components/navs/index.js","components/aside/index.js","components/aside/App.js","App.js","serviceWorker.js","index.js"],"names":["basename","apiUrl","peopleUrl","productsUrl","paymentsUrl","findUrl","scopeName","scope","navigation","text","url","icon","getInit","body","method","mode","headers","JSON","stringify","props","className","onClick","ev","href","window","location","App","width","unPrefixObject","object","string","output","i","split","twoDigits","number","slice","getDate","date","Date","getFullYear","getMonth","join","responseWindow","message","color","alert","state","data","dateArray","yearAndMonth","fetch","from","to","then","r","json","j","obj","key","hasOwnProperty","isEmpty","setState","map","x","this","length","birthday","fullName","phone","email","listHandler","Component","init","propName","responseHandler","catch","e","errorHandler","console","warn","newProps","listOfProperties","keep","inList","outList","forEach","filterObj","React","cloneElement","Children","only","children","Products","options","items","itemsHandler","v","some","item","value","amount","y","id","nItem","onChange","filter","op","option","name","price","type","min","changeHandler","target","NewOrder","description","totalPrice","obs","pair","customerId","employeeId","service","pDescription","match","label","reload","totalValue","parseFloat","reduce","total","currentValue","updateState","paymentsModes","totalPriceHandler","disabled","placeholder","submitHandler","NewProduct","productsData","col","SeeWithoutPrefix","initialize","preppend","k","append","fields","appendHandler","withFinder","filterLabel","finderHandler","filterHandler","preppendHander","contentHandler","OtherSeeWithoutPrefix","field","log","NewCustomer","address","doc","SeeUsers","SeeProducts","updatedData","prompt","stock","updateProductsHandler","SeeOrders","findTableUrl","open","printOrderUrl","main","path","render","component","Home","Unvailable","sidebar","sidebarPosition","header","containerClassName","bottombar","handleSidebar","PlaceholderNav","style","height","nav","DesktopNav","minWidth","handleChildren","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8MAIaA,EAA+C,oCAE/CC,EAASD,EAAW,OACpBE,EAAYD,EAAS,UACrBE,EAAcF,EAAS,YAEvBG,EAAcH,EAAS,YAKvBI,EAAUL,EAAW,QAIrBM,EAAY,SAAAC,GACrB,OAASA,GACL,IAAK,WACD,MAAO,aACX,IAAK,SACD,MAAO,WACX,IAAK,SACD,MAAO,SACX,IAAK,WACD,MAAO,iBACX,IAAK,WACD,MAAO,WACX,IAAK,YACD,MAAO,aACX,IAAK,SACD,MAAO,SACX,IAAK,UACD,MAAO,WACX,IAAK,WACD,MAAO,UACX,IAAK,UACD,MAAO,aACX,IAAK,UACD,MAAO,UACX,QACI,MAAO,KAINC,EAAa,CACtB,CACI,KAAQ,YACR,IAAO,IACP,KAAQ,eAEZ,CACI,KAAQ,sBACR,IAAO,oBACP,KAAQ,oBAEZ,CACIC,KAAM,wBACNC,IAAK,uBACLC,KAAM,gBAEV,CACI,KAAQ,eACR,IAAO,gBACP,KAAQ,oBAEZ,CACIF,KAAM,kBACNC,IAAK,mBACLC,KAAM,gBAEV,CACIF,KAAM,eACNC,IAAK,gBACLC,KAAM,eAEV,CACIF,KAAM,kBACNC,IAAK,mBACLC,KAAM,kBAEV,CACIF,KAAM,kBACNC,IAAK,gBACLC,KAAM,eAEV,CACIF,KAAM,qBACNC,IAAK,mBACLC,KAAM,kBAEV,CACIF,KAAM,cACNC,IAAK,eACLC,KAAM,eAEV,CACIF,KAAM,iBACNC,IAAK,kBACLC,KAAM,gBAIDC,EAAU,SAAEC,GAA4B,IAAtBC,EAAqB,uDAAZ,OACpC,MAAO,CACHA,OAAQA,EACRC,KAAM,OACNC,QAAS,CAAE,eAAgB,oBAC3BH,KAAMI,KAAKC,UAAWL,K,mDC7Gf,WAAWM,GACzB,OACO,4BACIC,UAAYD,EAAMC,UAClBC,QAAU,SAAAC,GAAaH,EAAMI,OAASC,OAAOC,SAASF,KAAOJ,EAAMI,QAQnE,6BACI,0BAAMH,UAAU,QACZ,uBAAGA,UAAU,gBAEjB,8CCdD,SAASM,IACpB,OACI,yBAAKN,UAAU,eACX,yBAAKA,UAAU,2BACX,kBAAC,EAAD,CACIO,MAAM,QAEV,0BAAMP,UAAU,mCAAhB,iCCTDM,QCMR,SAASE,EAAiBC,GAC7B,IAJuBC,EAInBC,EAAS,GACb,IAAM,IAAIC,KAAKH,EACXE,GANmBD,EAMDE,EALfF,EAAOG,MAAO,KAAO,KAKEJ,EAAQG,GAGtC,OAAOD,EA0CJ,SAASG,EAAYC,GACxB,OAAS,IAAMA,GAASC,OAAQ,GAE7B,SAASC,IACZ,IAAMC,EAAO,IAAIC,KACjB,MAAO,CAAED,EAAKE,cAAeN,EAAWI,EAAKG,WAAa,GAAKP,EAAWI,EAAKD,YAAcK,KAAM,KA4EhG,SAASC,EAAiBC,EAASC,GACtCC,MAAOF,GAGJ,ICvIclB,E,2MACjBqB,MAAQ,CACJC,KAAM,I,mFAEY,IAAD,OACXC,EAAYZ,IAAUJ,MAAO,KAC7BiB,EAAeD,EAAW,GAAM,IAAMA,EAAW,GAAM,IAK7DE,MAAQ9C,EAAU,UAAWO,EAJhB,CACTwC,KAAMF,EAAe,KACrBG,GAAIH,EAAe,QAGtBI,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GACEA,IDCV,SAAkBC,GACrB,IAAK,IAAIC,KAAOD,EACZ,GAAIA,EAAIE,eAAgBD,GACpB,OAAO,EAGf,OAAO,ECNYE,CAASJ,IACZ,EAAKK,SAAU,CAAEd,KAAMS,EAAEM,KAAK,SAAAC,GAAC,OAAIpC,EAAgBoC,c,oCAM/D,OAAKC,KAAKlB,MAAMC,KAAKkB,OAAS,EACnBD,KAAKlB,MAAMC,KAAKe,KAAK,SAAEC,EAAGhC,GAC7B,OACI,wBAAIZ,UAAU,0BACV,0BAAMA,UAAU,UACV4C,EAAEG,UAER,0BAAM/C,UAAU,UACV4C,EAAEI,UAER,0BAAMhD,UAAU,UACV4C,EAAEK,OAER,0BAAMjD,UAAU,UACV4C,EAAEM,WAMjB,wBAAIlD,UAAU,+BAAd,mB,+BAGP,OACI,6BACI,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAMA,UAAU,wCAEpB,6BACI,wBAAIA,UAAU,qCAAd,yBAGA,uBAAGA,UAAU,4CAAb,gDAIJ,yBAAKA,UAAU,cACX,wBAAIA,UAAU,0BACV,0BAAMA,UAAU,qBACZ,uBAAGA,UAAU,0BAEjB,0BAAMA,UAAU,kCAAhB,6BAGA,0BAAMA,UAAU,qBACZ,uBAAGA,UAAU,2BAGrB,wBAAIA,UAAU,cAAe6C,KAAKM,qB,GAtErBC,a,gBCJlB9C,E,4LCaQ,IAAD,QAEfuC,KAAK9C,MAAMsD,KACLtB,MAAOc,KAAK9C,MAAMT,IAAKuD,KAAK9C,MAAMsD,MAElCtB,MAAOc,KAAK9C,MAAMT,MAErB4C,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACpBF,MAAM,SAAAG,GACDA,GACJ,EAAKK,SAAL,eAAkB,EAAK3C,MAAMuD,SAAa,EAAKvD,MAAMwD,gBAAkB,EAAKxD,MAAMwD,gBAAiBlB,GAAMA,OAG1GmB,OAAO,SAAAC,GAAC,OAAM,EAAK1D,MAAM2D,aAAe,EAAK3D,MAAM2D,aAAcD,GAAME,QAAQC,KAAMH,Q,+BAGtF,IAAII,EHDC,SAAqBvB,EAAKwB,GAAkC,IAAhBC,EAAe,wDAC1DC,EAAS,GACTC,EAAU,GACd,IAAM,IAAIrD,KAAK0B,EACX2B,EAASrD,GAAM0B,EAAK1B,GAQxB,OANAkD,EAAiBI,SAAS,SAAAtB,GACjBN,EAAIE,eAAgBI,KACrBoB,EAAQpB,GAAMN,EAAKM,UACZqB,EAASrB,OAGfmB,EAAOC,EAASC,EGXZE,CAAWtB,KAAK9C,MAAO,CAAE,MAAO,OAAQ,WAAY,kBAAmB,iBAItF,OAHK8C,KAAKlB,QACTkC,EAAUhB,KAAK9C,MAAMuD,UAAaT,KAAKlB,MAAOkB,KAAK9C,MAAMuD,WAEnDc,IAAMC,aACZD,IAAME,SAASC,KAAM1B,KAAK9C,MAAMyE,UAChCX,O,GAvB8BO,IAAMhB,WCO1BqB,EAAb,2MACI9C,MAAQ,CACJ+C,QAAS,GACTC,MAAO,IAHf,EAoBIC,aAAe,SAAAC,GACX,GAAKA,EAAI,CACL,IAAMF,EAAQE,EAAElC,KAAK,SAAAC,GAIjB,OAHO,EAAKjB,MAAMgD,MAAMG,MAAM,SAAAC,GAAI,OAAIA,EAAKC,QAAUpC,EAAEoC,WACnDpC,EAAEqC,OAAS,GAERrC,KAEX,EAAKF,SAAU,CAAEiC,MAAOA,MA5BpC,mFAM0B,IAAD,OACjB5C,MAAOhD,EAAc,0BACpBmD,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GACH,GAAKA,EAAI,CACL,IAAMqC,EAAUrC,EAAEM,KAAK,SAAAC,GACnB,IAAIsC,EAAI1E,EAAgBoC,GAExB,OADAsC,EAAED,OAAS,EACJC,KAEX,EAAKxC,SAAU,CAAEgC,QAASA,UAhB1C,oCAgCoBK,EAAME,GAAU,IAAD,OACrBP,EAAU7B,KAAKlB,MAAM+C,QAAQ/B,KAAK,SAAA/B,GACpC,GAAKA,EAAEuE,KAAOJ,EAAKI,GAAK,CACpB,IAAIC,EAAQL,EAEZ,OADAK,EAAMH,OAASA,EACRG,EAEX,OAAOxE,KAEXiC,KAAKH,SACD,CAAEgC,QAASA,IACX,WACS,EAAK3E,MAAMsF,UACZ,EAAKtF,MAAMsF,SAAU,EAAK1D,MAAM+C,QAAQY,QAAQ,SAAAC,GAAE,OAAIA,EAAGN,OAAS,WA7CtF,+BAmDc,IAAD,OACL,OACI,6BACMpC,KAAKlB,MAAM+C,QAAQ/B,KAAK,SAAE6C,EAAQ5E,GAChC,OACI,yBAAK2B,IAAM3B,GACP,8BACI,gCAAU4E,EAAOC,MACjB,0BAAMzF,UAAU,qBAAsBwF,EAAOE,QAGjD,yBAAK1F,UAAU,WACX,2BACI2F,KAAK,SACLC,IAAI,IACJ5F,UAAU,eACVgF,MAAQQ,EAAOP,OACfI,SAAW,SAAAnF,GAAE,OAAI,EAAK2F,cAAeL,EAAQtF,EAAG4F,OAAOd,oBApE3F,GAA8B5B,aAgFjB2C,EAAb,2MACIpE,MAAQ,CACJqD,MAAO,GACPgB,YAAa,GACbrG,KAAM,GACNsG,WAAY,GACZtB,MAAO,GACPuB,IAAK,IAPb,2EASkBC,GACVtD,KAAKH,SAAUyD,KAVvB,sCAaQ,GACItD,KAAKlB,MAAMyE,YAEXvD,KAAKlB,MAAM0E,YAEXxD,KAAKlB,MAAM2E,SAEXzD,KAAKlB,MAAMhC,MAEXkD,KAAKlB,MAAM0E,WAEX,GAA+B,KAA1BxD,KAAKlB,MAAMsE,WAAoB,CAChC,IAAMM,EAAe,YAAc1D,KAAKlB,MAAMgD,MAAMhC,KAAK,SAAAC,GAAC,OAAIA,EAAE6C,KAAO,KAAO7C,EAAEqC,OAAS,OAAM3D,KAAM,KACjG0D,EAAQ,GAIRA,GAHK,GAAKnC,KAAKlB,MAAMsE,YAAaO,MAAO,KAGjC3D,KAAKlB,MAAMsE,WAFXpD,KAAKlB,MAAMsE,WAAa,MAIpC,IAAMxG,EAAO,CACT2G,WAAYvD,KAAKlB,MAAMyE,WACvBC,WAAYxD,KAAKlB,MAAM0E,WACvBC,QAASzD,KAAKlB,MAAM2E,QAAQG,MAC5B9G,KAAMkD,KAAKlB,MAAMhC,KACjBqG,YAAaO,EAAe,IAAM1D,KAAKlB,MAAMuE,IAC7ClB,MAAOA,GAEXjD,MAAO/C,EAAaQ,EAASC,IAC5ByC,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GACEA,GACDd,EAAgB,kCAChBnB,OAAOC,SAASqG,QAAQ,IAExBnF,EAAgB,+CAIxBG,MAAO,yDAGXA,MAAO,kDAtDnB,0CA0DQ,GAAOmB,KAAKlB,MAAM2E,QAEX,CACH,IAAIK,EAAaC,WAAY/D,KAAKlB,MAAM2E,QAAQZ,OAChD,GAAK7C,KAAKlB,MAAMgD,MAAM7B,OAAS,EAK3B6D,GAJsB9D,KAAKlB,MAAMgD,MAAMhC,KAAK,SAAAoC,GACxC,OAAO6B,WAAY7B,EAAKW,OAAQkB,WAAY7B,EAAKE,WAEpD4B,QAAQ,SAAEC,EAAOC,GAAT,OAA2BD,EAAQC,IAAc,GAG9DlE,KAAKH,SAAU,CAAEuD,WAAYU,SAV7BjF,MAAO,sCA3DnB,+BAwEe,IAAD,OACN,OACI,yBAAK1B,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,gBAAd,wBAKR,yBAAKA,UAAU,kBACX,yBACIA,UAAU,mBAEV,2BAAOA,UAAU,gBACb,0CAGA,kBAAC,EAAD,CACIV,IAAMR,EAAY,yBAClByE,gBAAkB,SAAAlB,GAAC,OAAIA,EAAEM,KAAK,SAAAC,GAAC,OAAIpC,EAAgBoC,MAAMD,KAAK,SAAAuC,GAAC,MAAM,CAAEF,MAAOE,EAAEC,GAAIsB,MAAOvB,EAAElC,cAC7FM,SAAS,WAET,kBAAC,IAAD,CACI+B,SAAW,SAAAR,GAAC,OAAI,EAAKmC,YAAa,CAAEZ,WAAYvB,EAAE4B,cAKlE,yBACIzG,UAAU,mBAEV,2BAAOA,UAAU,gBACb,mDAGA,kBAAC,EAAD,CACIV,IAAMR,EAAY,yBAClByE,gBAAkB,SAAAlB,GAAC,OAAIA,EAAEM,KAAK,SAAAC,GAAC,OAAIpC,EAAgBoC,MAAMD,KAAK,SAAAuC,GAAC,MAAM,CAAEF,MAAOE,EAAEC,GAAIsB,MAAOvB,EAAElC,cAC7FM,SAAS,WAET,kBAAC,IAAD,CACI+B,SAAW,SAAAR,GAAC,OAAI,EAAKmC,YAAa,CAAEX,WAAYxB,EAAE4B,cAMlE,yBACIzG,UAAU,mBAEV,2BAAOA,UAAU,gBACb,6CAGA,kBAAC,EAAD,CACIV,IAAMP,EAAc,yBACpBwE,gBAAkB,SAAAlB,GAAC,OAAIA,EAAEM,KAAK,SAAAC,GAAC,OAAIpC,EAAgBoC,MAAMD,KAAK,SAAAuC,GAAC,MAAM,CAAEF,MAAOE,EAAEO,KAAMgB,MAAOvB,EAAEO,KAAMC,MAAOR,EAAEQ,WAC9GpC,SAAS,WAET,kBAAC,IAAD,CACI+B,SAAW,SAAAR,GAAC,OAAI,EAAKmC,YAAa,CAAEV,QAASzB,UAK7D,yBACI7E,UAAU,mBAEV,2BAAOA,UAAU,gBACb,oDAGA,kBAAC,IAAD,CACI0E,QAAUuC,EACV5B,SAAW,SAAAR,GAAC,OAAI,EAAKmC,YAAa,CAAErH,KAAMkF,EAAEG,aAIxD,yBACIhF,UAAU,mBAEV,yBAAKA,UAAU,gBACX,2CAGA,kBAAC,EAAD,CAAUqF,SAAW,SAAAV,GAAK,OAAI,EAAKqC,YAAa,CAAErC,MAAOA,SAIjE,yBACI3E,UAAU,UAEV,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,yCAChBC,QAAU,SAAAC,GAAE,OAAI,EAAKgH,sBADrB,iBAEkB,uBAAGlH,UAAU,8BAGnC,2BACImH,UAAQ,EACRnC,MAAQnC,KAAKlB,MAAMsE,WACnBjG,UAAU,eACV2F,KAAK,OACLyB,YAAY,yDACZ/B,SAAW,SAAAnF,GAAE,OAAI,kBAI7B,yBACIF,UAAU,UAEV,2BAAOA,UAAU,gBACb,mDACe,2BAAOA,UAAU,cAAjB,eAEf,8BACIA,UAAU,eACVgF,MAAQnC,KAAKlB,MAAMuE,IACnBb,SAAW,SAAAnF,GAAE,OAAI,EAAK8G,YAAa,CAAEd,IAAKhG,EAAG4F,OAAOd,SACpDoC,YAAY,kJAIxB,yBAAKpH,UAAU,2BACX,4BACIA,UAAU,kBACVC,QAAU,SAAAC,GAAE,OAAI,EAAKmH,kBAErB,0BAAMrH,UAAU,QAAhB,oBAGA,uBAAGA,UAAU,yBA7MzC,GAA8BoD,aAwNxB6D,EAAgB,CAClB,CACIjC,MAAO,aACPyB,MAAO,cAEX,CACIzB,MAAO,YACPyB,MAAO,aAEX,CACIzB,MAAO,WACPyB,MAAO,aA+FFa,GA5FmBlE,YA4FhC,2MACIzB,MAAQ,CACJ+D,MAAO,GACPM,YAAa,GACbP,KAAM,GACNtG,MAAO,EAAKY,MAAMZ,OAL1B,2EAOkBgH,GACVtD,KAAKH,SAAUyD,KARvB,sCAWQpE,MAAOhD,EAAaS,EAASqD,KAAKlB,QACjCO,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GAECd,EADCc,EACe,gCAEA,4CAjBhC,+BAqBe,IAAD,OACAkF,EAAe,CACjB,CACI9B,KAAM,OACNpG,KAAM,WAAaH,EAAW2D,KAAK9C,MAAMZ,OACzCwG,KAAM,OACN6B,IAAK,KAET,CACI/B,KAAM,QACNpG,KAAM,WACNsG,KAAM,OACN6B,IAAK,KAET,CACI/B,KAAM,cACNpG,KAAM,wBACNsG,KAAM,OACN6B,IAAK,OAGb,OACI,yBAAKxH,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,gBAAd,gBACmBd,EAAW2D,KAAK9C,MAAMZ,UAIjD,yBAAKa,UAAU,kBAEPuH,EAAa5E,KAAK,SAAEC,EAAGhC,GACnB,OACI,yBACIZ,UAAY,iBAAmB4C,EAAE4E,IACjCjF,IAAM3B,GAEN,2BAAOZ,UAAU,gBACb,+BACM4C,EAAEvD,MAER,2BACIsG,KAAO/C,EAAE+C,KACTX,MAAQ,EAAKrD,MAAOiB,EAAE6C,MACtBJ,SAAW,SAAAnF,GAAE,OAAI,EAAK8G,YAAL,eAAsBpE,EAAE6C,KAAQvF,EAAG4F,OAAOd,SAC3DhF,UAAU,sBAOlC,yBAAKA,UAAU,2BACX,4BACIA,UAAU,kBACVC,QAAU,SAAAC,GAAE,OAAI,EAAKmH,kBAErB,0BAAMrH,UAAU,QAAhB,aACgBd,EAAW2D,KAAK9C,MAAMZ,QAEtC,uBAAGa,UAAU,yBAlFzC,GAAgCoD,cAiGnBqE,EAAb,2MACI9F,MAAQ,CACJC,KAAM,IAFd,4EAImB,IAAD,OACVG,MAAOc,KAAK9C,MAAMT,KACjB4C,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GAAC,OAAI,EAAKK,SAAU,CAAEd,KAAQS,EAAIA,EAAEM,KAAK,SAAAC,GAAC,OAAIpC,EAAgBoC,MAAQ,UAPrF,0CAUQC,KAAK6E,eAVb,uCAaQ,GAAK7E,KAAK9C,MAAM4H,SACZ,OACI,wBAAI3H,UAAU,0BAEN6C,KAAK9C,MAAM4H,SAAShF,KAAK,SAAEuC,EAAG0C,GAC1B,OACI,yBACIrF,IAAMqF,EACN5H,UAAU,eAERkF,SAvBtC,oCAgCoBtC,GACZ,GAAKC,KAAK9C,MAAM8H,QACPjF,EACD,OACI,yBAAK5C,UAAU,mBACT6C,KAAK9C,MAAM8H,OAAQjF,MArC7C,uCA2CuB,IAAD,OACd,OAAKC,KAAKlB,MAAMC,KAAKkB,OAAS,EACnBD,KAAKlB,MAAMC,KAAKe,KAAK,SAAEC,EAAGhC,GAC7B,OACI,wBACI2B,IAAM3B,EACNZ,UAAU,0BAGN,EAAKD,MAAM+H,OAAOnF,KAAK,SAAEuC,EAAG0C,GACxB,OACI,wBACIrF,IAAMqF,EACN5H,UAAU,eAER4C,EAAGsC,OAKnB,EAAK6C,cAAenF,OAK3B,mBApEnB,oCAuEoBoC,GAAS,IAAD,OACfA,EACDjD,MAAOc,KAAK9C,MAAMiI,WAAa,IAAMnF,KAAK9C,MAAMZ,MAAQ,IAAM6F,GAC7D9C,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GACEA,EACD,EAAKK,SAAU,CAAEd,KAAMS,EAAEM,KAAK,SAAAC,GAAC,OAAIpC,EAAgBoC,QAEnD,EAAK8E,gBAIb7E,KAAK6E,eAnFjB,sCAsFsB,IAAD,OACb,OAAK7E,KAAK9C,MAAMuF,OAER,+BACI,+BACMzC,KAAK9C,MAAMkI,aAEjB,2BACItC,KAAK,OACL3F,UAAU,eACVqF,SAAW,SAAAnF,GAAE,OAAI,EAAKgI,cAAehI,EAAG4F,OAAOd,WAKxD,KArGf,+BAwGQ,OACI,6BACMnC,KAAKsF,gBACP,wBACInI,UAAU,cAER6C,KAAKuF,iBACLvF,KAAKwF,uBA/G3B,GAAsCjF,aAqHzBkF,EAAb,2MACI3G,MAAQ,CACJC,KAAM,GACNI,KAAM,GACNC,GAAIhB,KAJZ,4EAMmB,IAAD,OACVc,MAAOc,KAAK9C,MAAMT,KACjB4C,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GAAC,OAAI,EAAKK,SAAU,CAAEd,KAAQS,EAAIA,EAAEM,KAAK,SAAAC,GAAC,OAAIpC,EAAgBoC,MAAQ,UATrF,0CAYQC,KAAK6E,eAZb,kCAckBvB,GACVtD,KAAKH,SAAUyD,KAfvB,uCAkBQ,GAAKtD,KAAK9C,MAAM4H,SACZ,OACI,wBAAI3H,UAAU,0BAEN6C,KAAK9C,MAAM4H,SAAShF,KAAK,SAAEuC,EAAG0C,GAC1B,OACI,wBACIrF,IAAMqF,EACN5H,UAAU,eAERkF,SA5BtC,oCAqCoBtC,GACZ,GAAKC,KAAK9C,MAAM8H,QACPjF,EACD,OACI,yBAAK5C,UAAU,mBACT6C,KAAK9C,MAAM8H,OAAQjF,MA1C7C,uCAgDuB,IAAD,OACd,OAAKC,KAAKlB,MAAMC,KAAKkB,OAAS,EACnBD,KAAKlB,MAAMC,KAAKe,KAAK,SAAEC,EAAGhC,GAC7B,OACI,wBACI2B,IAAM3B,EACNZ,UAAU,0BAGN,EAAKD,MAAM+H,OAAOnF,KAAK,SAAEuC,EAAG0C,GACxB,OACI,wBACIrF,IAAMqF,EACN5H,UAAU,eAER4C,EAAGsC,OAKnB,EAAK6C,cAAenF,OAK3B,mBAzEnB,sCA4EsB,IAAD,OACb,GAAuB,KAAlBC,KAAKlB,MAAMM,GACZY,KAAKH,SACD,CAAET,GAAIhB,MACN,WACI,IAAMxB,EAAO,CACTuC,KAAM,EAAKL,MAAMK,KACjBC,GAAwB,KAAlB,EAAKN,MAAMM,GAAYhB,IAAY,EAAKU,MAAMM,GACpDsG,MAAO,QAEX5E,QAAQ6E,IAAK,OAAQ/I,GACrBsC,MAAO,EAAKhC,MAAMiI,WAAYxI,EAASC,IACtCyC,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GACEA,EACD,EAAKK,SAAU,CAAEd,KAAMS,EAAEM,KAAK,SAAAC,GAAC,OAAIpC,EAAgBoC,QAEnD,EAAK8E,uBAKlB,CACH,IAAMjI,EAAO,CACTuC,KAAMa,KAAKlB,MAAMK,KACjBC,GAAwB,KAAlBY,KAAKlB,MAAMM,GAAYhB,IAAY4B,KAAKlB,MAAMM,GACpDsG,MAAO,QAEX5E,QAAQ6E,IAAK,OAAO/I,GACpBsC,MAAOc,KAAK9C,MAAMiI,WAAYxI,EAASC,IACtCyC,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GACEA,EACD,EAAKK,SAAU,CAAEd,KAAMS,EAAEM,KAAK,SAAAC,GAAC,OAAIpC,EAAgBoC,QAEnD,EAAK8E,mBA/GzB,sCAoHsB,IAAD,OAGT,OADA/D,QAAQ6E,IAAK3F,KAAKlB,OAEd,6BACI,2BAAO3B,UAAU,QACb,8CAGA,2BACI2F,KAAK,OACL3F,UAAU,eACVgF,MAAQnC,KAAKlB,MAAMK,KACnBqD,SAAW,SAAAnF,GAAE,OAAI,EAAKwC,SAAU,CAAEV,KAAM9B,EAAG4F,OAAOd,QAAS,kBAAM,EAAKkD,uBAG9E,2BAAOlI,UAAU,QACb,yCAGA,2BACI2F,KAAK,OACL3F,UAAU,eACVgF,MAAQnC,KAAKlB,MAAMM,GACnBoD,SAAW,SAAAnF,GAAE,OAAI,EAAKwC,SAAU,CAAET,GAAI/B,EAAG4F,OAAOd,QAAS,kBAAM,EAAKkD,0BA5IhG,+BAqJQ,OACI,6BACMrF,KAAKsF,gBACP,2BACInI,UAAU,cAER6C,KAAKuF,iBACLvF,KAAKwF,uBA5J3B,GAA2CjF,aAsKrCxB,EAAO,CACT,CACI6D,KAAM,WACNpG,KAAM,gBACNsG,KAAM,OACN6B,IAAK,KAET,CACI/B,KAAM,WACNpG,KAAM,aACNsG,KAAM,OACN6B,IAAK,KAET,CACI/B,KAAM,QACNpG,KAAM,WACNsG,KAAM,OACN6B,IAAK,KAET,CACI/B,KAAM,QACNpG,KAAM,QACNsG,KAAM,QACN6B,IAAK,KAET,CACI/B,KAAM,UACNpG,KAAM,cACNsG,KAAM,OACN6B,IAAK,KAET,CACI/B,KAAM,MACNpG,KAAM,YACNsG,KAAM,OACN6B,IAAK,MA4DQiB,GAxDYrF,Y,2MAyD7BzB,MAAQ,CACJqB,SAAU,GACVD,SAAU,GACVE,MAAO,GACPC,MAAO,GACPwF,QAAS,GACTvJ,MAAO,EAAKY,MAAMZ,MAClBwJ,IAAK,I,2EAEKxC,GACVtD,KAAKH,SAAUyD,K,sCAGfpE,MAAOjD,EAAWU,EAASqD,KAAKlB,QAC/BO,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GAECd,EADCc,EACe,kCAEA,4C,+BAIjB,IAAD,OACN,OACI,yBAAKrC,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,QAAd,eACgB,0BAAMA,UAAY,0BAAkD,aAArB6C,KAAK9C,MAAMZ,MAAuB,SAAW,YAAgBD,EAAW2D,KAAK9C,MAAMZ,UAIlJyC,EAAKe,KAAK,SAAEC,EAAGhC,GACX,OACI,yBACIZ,UAAY,iBAAmB4C,EAAE4E,IACjCjF,IAAM3B,GAEN,2BAAOZ,UAAU,gBACb,+BACM4C,EAAEvD,MAER,2BACIsG,KAAO/C,EAAE+C,KACTX,MAAQ,EAAKrD,MAAOiB,EAAE6C,MACtBJ,SAAW,SAAAnF,GAAE,OAAI,EAAK8G,YAAL,eAAsBpE,EAAE6C,KAAQvF,EAAG4F,OAAOd,SAC3DhF,UAAU,sBAOlC,yBAAKA,UAAU,2BACX,4BACIA,UAAU,kBACVC,QAAU,SAAAC,GAAE,OAAI,EAAKmH,kBAErB,0BAAMrH,UAAU,QAAhB,sBAGA,uBAAGA,UAAU,yB,GA/DAoD,cCn2BnCwF,EAAW,SAAE7I,GAAF,OACb,6BACI,kBAAC,EAAD,CACIuF,QAAM,EACN2C,YAAY,iBACZ3I,IAAMR,EAAY,iBAAmBiB,EAAMZ,MAC3C2I,OAAS,CAAE,WAAY,QAAS,SAChCH,SAAW,CAAE,OAAQ,QAAS,YAC9BK,WAAa/I,EACbE,MAAQY,EAAMZ,MACdoD,IAAsB,aAAhBxC,EAAMZ,MAAuB,EAAI,MAuB7C0J,EAAc,SAAE9I,GAAF,OAChB,6BACI,kBAAC,EAAD,CACIT,IAAMP,EAAc,kBAAoBgB,EAAMZ,MAC9C2I,OAAS/H,EAAM+H,OACfH,SAAW5H,EAAM4H,SACjBpF,IAAsB,YAAhBxC,EAAMZ,MAAsB,EAAI,EACtC0I,OAAS,SAAAjF,GAAC,OACN,4BAAQ5C,UAAU,eACdC,QAAU,SAAAC,GAAE,OA3BF,SAAA0B,GAC1B,IAAIkH,EAAc,GAClBA,EAAW,KAAa1I,OAAO2I,OAAQ,WAAc7J,EAAW0C,EAAKzC,OAAU,IAAKyC,EAAK6D,MACzFqD,EAAW,MAAc1I,OAAO2I,OAAQ,+BAA+B7J,EAAW0C,EAAKzC,OAAU,IAAKyC,EAAK8D,OACvF,YAAf9D,EAAKzC,QACN2J,EAAW,MAAc1I,OAAO2I,OAAQ,iBAAmB7J,EAAW0C,EAAKzC,OAAU,eAAgByC,EAAKoH,QAE9GjH,MAAOhD,EAAc,IAAM6C,EAAKuD,GAAI3F,EAASsJ,EAAa,QACzD5G,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GACEA,GACDX,MAAO,iCACPtB,OAAOC,SAASqG,UAEhBhF,MAAO,kCAaiBuH,CAAuBrG,KAEvC,uBAAG5C,UAAU,wBA0B3BkJ,EAAY,kBACd,6BACI,kBAAC,EAAD,CACI5J,IAAMN,EACNgJ,WAAamB,uDACbrB,OAAS,CAAE,OAAQ,OAAQ,aAAc,aAAc,SACvDH,SAAW,CAAE,OAAQ,oBAAqB,UAAW,mBAAiB,cACtEE,OAAS,SAAAjF,GAAC,OACN,4BAAQ5C,UAAU,eACdC,QAAU,SAAAC,GAAE,OA5BJ0B,EA4B6BgB,OA3BrDxC,OAAOgJ,KAAMC,2CAAsBzH,EAAKuD,IADhB,IAAAvD,IA8BR,uBAAG5B,UAAU,yBAOZM,E,wLAEb,IAAIK,EACE2I,EACF,yBAAKtJ,UAAU,aACX,0BAAMA,UAAU,qCACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIuJ,KAAK,oBACLC,OAAS,kBAAM,kBAAC,EAAD,CAASrK,MAAM,gBAElC,kBAAC,IAAD,CACIoK,KAAK,uBACLC,OAAS,kBAAM,kBAAC,EAAD,CAAUrK,MAAM,gBAGnC,kBAAC,IAAD,CACIoK,KAAK,gBACLC,OAAS,kBAAM,kBAAC,EAAD,CAASrK,MAAM,gBAElC,kBAAC,IAAD,CACIoK,KAAK,mBACLC,OAAS,kBAAM,kBAAC,EAAD,CAAUrK,MAAM,gBAGnC,kBAAC,IAAD,CACIoK,KAAK,gBACLC,OAAS,kBAAM,kBAAC,EAAD,CAAYrK,MAAM,eAErC,kBAAC,IAAD,CACIoK,KAAK,mBACLC,OAAS,kBAAM,kBAAC,EAAD,CACXrK,MAAM,UACN2I,OAAS,CAAE,OAAQ,QAAS,SAC5BH,SAAW,CAAE,sCAAmB,0CAAoB,+CAG5D,kBAAC,IAAD,CACI4B,KAAK,gBACLC,OAAS,kBAAM,kBAAC,EAAD,CAAYrK,MAAM,eAErC,kBAAC,IAAD,CACIoK,KAAK,mBACLC,OAAS,kBAAM,kBAAC,EAAD,CACXrK,MAAM,UACN2I,OAAS,CAAE,OAAQ,SACnBH,SAAW,CAAE,sCAAmB,gDAIxC,kBAAC,IAAD,CAAO4B,KAAK,eAAeE,UAAY1D,IACvC,kBAAC,IAAD,CAAOwD,KAAK,kBAAkBE,UAAYP,IAE1C,kBAAC,IAAD,CAAOK,KAAK,IAAIE,UAAYC,IAC5B,kBAAC,IAAD,CAAOD,UAAYE,OAKnC,GAAK9G,KAAK9C,MAAM6J,QACZ,OAAS/G,KAAK9C,MAAM8J,iBAChB,IAAK,QACDlJ,EAAS,CAAE2I,EAAMzG,KAAK9C,MAAM6J,SAC5B,MACJ,QACIjJ,EAAS,CAAEkC,KAAK9C,MAAM6J,QAASN,QAGvC3I,EAAS2I,EAEb,OAAO3I,EAAOgC,KAAK,SAAEC,EAAGhC,GAAL,OAAYyD,uBAAczB,EAAG,CAAEL,IAAK3B,S,+BAGvD,OACI,kBAAC,IAAD,KAEMiC,KAAK9C,MAAM+J,OAEb,yBAAK9J,UAAY,UAAa6C,KAAK9C,MAAMgK,mBAAqBlH,KAAK9C,MAAMgK,mBAAqB,KAExFlH,KAAK9C,MAAMiK,UAEXnH,KAAKoH,sB,GAlFM7G,aCzG1B,SAAS8G,IACZ,OACI,wBAAIlK,UAAU,oBACV,0BAAMA,UAAU,QACZ,yBAAKA,UAAU,4BAA4BmK,MAAQ,CAAE5J,MAAO,OAAQ6J,OAAQ,WAEhF,0BAAMpK,UAAU,QACZ,yBAAKA,UAAU,qBAAqBmK,MAAQ,CAAE5J,MAAO,QAAS6J,OAAQ,YA0DvE,IC7EA9J,ED6EA,SAAWP,GACtB,OAAQA,EAAMZ,OACV,IAAK,SACD,OA1BekL,EA0BEtK,EAAM4E,MAxB3B,yBAAK3E,UAAU,aACX,wBAAIA,UAAU,iCACRqK,EAAI1H,KAAK,SAAEC,EAAGhC,GACZ,OACI,wBAAIZ,UAAU,YAAYuC,IAAM3B,GAC5B,kBAAC,IAAD,CAAMqB,GAAKW,EAAEtD,KACT,6BACI,uBAAGU,UAAY4C,EAAErD,QAErB,+BACMqD,EAAEvD,aAehC,IAAK,UACD,OA1DL,SAAsBgL,GACzB,OAAKA,EAEG,6BACI,wBAAIrK,UAAU,iBACRqK,EAAI1H,KAAK,SAAEC,EAAGhC,GACZ,OACI,wBAAIZ,UAAU,YAAYuC,IAAM3B,GAC5B,kBAAC,IAAD,CAAMqB,GAAKW,EAAEtD,KACT,0BAAMU,UAAU,QACZ,uBAAGA,UAAY4C,EAAErD,QAErB,+BACMqD,EAAEvD,aAWhC,wBAAIW,UAAU,iBACR,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG2C,KAAK,SAAA/B,GAAC,OAAI,kBAACsJ,EAAD,CAAgB3H,IAAM3B,QAiC3C0J,CAAYvK,EAAM4E,OAC7B,QACI,OACI,wBAAI3E,UAAU,iBAEN,CAAE,EAAG,EAAG,EAAG,EAAG,GAAI2C,KAAK,SAAA/B,GAAC,OAAI,kBAACsJ,EAAD,CAAgB3H,IAAM3B,QAjCnE,IAAoByJ,GEtDZ/J,E,yLCMP,GAAKuC,KAAK9C,MAAMyE,SACZ,OACI,kBAAC,WAAD,KACM3B,KAAK9C,MAAMyE,SACb,wBAAIxE,UAAU,Y,+BAM1B,OACI,2BACIA,UAAY,gCAAkC6C,KAAK9C,MAAMC,UACzDmK,MAAQ,CAAEI,SAAU,UAElB1H,KAAK2H,iBAEP,kBAAC,EAAD,CACIrL,MAAM,UACNwF,MAAQ9B,KAAK9C,MAAMsK,W,GArBVjH,aCOvBwG,G,MACL,kBAAC,EAAD,CACCS,IAAMjL,EACNY,UAAU,uCAEV,yBAAKA,UAAU,QACd,kBAAC,EAAD,CACCO,MAAM,KACNP,UAAU,4EACVG,KAAOvB,OCVS6L,QACW,cAA7BrK,OAAOC,SAASqK,UAEe,UAA7BtK,OAAOC,SAASqK,UAEhBtK,OAAOC,SAASqK,SAASlE,MACvB,2DCbNmE,IAASnB,OACL,mBFsBW,WACd,OACC,kBAAC,EAAD,CACCa,IAAMjL,EACNwK,QAAUA,EACVC,gBAAgB,WE3Bf,MACAe,SAASC,eAAgB,SD0HvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9I,MAAK,SAAA+I,GACjCA,EAAaC,kB","file":"static/js/main.f4044f6d.chunk.js","sourcesContent":["/**\n * ORÇA AGORA BACKEND ROUTES\n */\nexport const indev = false;\nexport const basename = ( indev ? \"http://localhost:8000\" : \"http://localhost/dearjohn/backend\" );\n\nexport const apiUrl = basename + \"/api\";\nexport const peopleUrl = apiUrl + \"/people\";\nexport const productsUrl = apiUrl + \"/products\";\nexport const ordersUrl = apiUrl + \"/orders\";\nexport const paymentsUrl = apiUrl + \"/payments\";\nexport const readPaymentsUrl = \"/payments\";\n\nexport const printOrderUrl = basename + \"/print\";\n\nexport const findUrl = basename + \"/find\";\nexport const findTableUrl = basename + \"/findtable\";\n\n\nexport const scopeName = scope => {\n    switch ( scope ) {\n        case \"provider\":\n            return \"Fornecedor\";\n        case \"medium\":\n            return \"Mídia\";\n        case \"dealer\":\n            return \"Dealer\";\n        case \"employee\":\n            return \"Funcionário\";\n        case \"operator\":\n            return \"Operador\";\n        case \"financial\":\n            return \"Financeiro\";\n        case \"master\":\n            return \"Mestre\";\n        case \"partner\":\n            return \"Sócio\";\n        case \"customer\":\n            return \"Cliente\";\n        case \"service\":\n            return \"Serviço\";\n        case \"product\":\n            return \"Produto\";\n        default:\n            return \"\";\n    }\n}\n\nexport const navigation = [\n    {\n        \"text\": \"Início\",\n        \"url\": \"/\",\n        \"icon\": \"fas fa-home\",\n    },\n    {\n        \"text\": \"Novo Funcionário\",\n        \"url\": \"/novo-funcionario\",\n        \"icon\": \"fas fa-user-plus\",\n    },\n    {\n        text: \"Listar Funcionário\",\n        url: \"/listar-funcionarios\",\n        icon: \"fas fa-users\"\n    },\n    {\n        \"text\": \"Novo Cliente\",\n        \"url\": \"/novo-cliente\",\n        \"icon\": \"fas fa-user-plus\",\n    },\n    {\n        text: \"Listar Clientes\",\n        url: \"/listar-clientes\",\n        icon: \"fas fa-users\"\n    },\n    {\n        text: \"Novo Produto\",\n        url: \"/novo-produto\",\n        icon: \"fas fa-plus\"\n    },\n    {\n        text: \"Listar Produtos\",\n        url: \"/listar-produtos\",\n        icon: \"fas fa-list-ul\"\n    },\n    {\n        text: \"Novo Serviço\",\n        url: \"/novo-servico\",\n        icon: \"fas fa-plus\"\n    },\n    {\n        text: \"Listar Serviços\",\n        url: \"/listar-servicos\",\n        icon: \"fas fa-list-ul\"\n    },\n    {\n        text: \"Novo Pedido\",\n        url: \"/novo-pedido\",\n        icon: \"fas fa-file\"\n    },\n    {\n        text: \"Listar Pedidos\",\n        url: \"/listar-pedidos\",\n        icon: \"fas fa-copy\"\n    },\n]\n\nexport const getInit = ( body, method = \"POST\" ) => {\n    return {\n        method: method,\n        mode: \"cors\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify( body )\n    }\n}","import React from 'react';\n\nexport default function ( props ) {\n\treturn (\n        <figure\n            className={ props.className }\n            onClick={ ev => { if ( props.href ) { window.location.href = props.href } } }\n        >\n            {/* <img\n                src={ basename + \"/images/logo.png\"}\n                alt=\"Orça Agora\"\n                width={ props.width }\n                className={ props.className }\n            /> */}\n            <div>\n                <span className=\"mx-1\">\n                    <i className=\"fas fa-cut\"></i>\n                </span>\n                <span>\n                    DEAR JOHN\n                </span>\n            </div>\n        </figure>\n    );\n}","import React from 'react';\nimport Logo from '../logo/App';\n\n\nexport default function App () {\n    return(\n        <div className=\"py-4 d-flex\">\n            <div className=\"m-auto pt-4 text-center\">\n                <Logo\n                    width=\"260\"\n                />\n                <span className=\"text-secondary font-weight-bold\">Indisponível no momento.</span>\n            </div>\n        </div>\n    )\n}","import App from './App';\n\nexport default App;","/**\n * \n * ARRAY AND OBJECTS\n * \n */\nexport function unPrefix ( string ) {\n    return string.split( \"_\" )[ 1 ];\n}\nexport function unPrefixObject ( object ) {\n    let output = {};\n    for ( let i in object ) { // eslint-disable-line no-unused-vars\n        output[ unPrefix( i ) ] = object[ i ];\n        \n    }\n    return output;\n}\nexport function getBasename () {\n    const hiddenTag = document.querySelector( \"input[name=basename]\" );\n    return ( hiddenTag ? hiddenTag.value : \"http://orcaagora.com.br\" );\n}\n\nexport function isEmpty( obj ) {\n    for( let key in obj ) { // eslint-disable-line no-unused-vars\n        if( obj.hasOwnProperty( key ) ) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function filterObj ( obj, listOfProperties, keep = false ) {\n    let inList = {};\n    let outList = {};\n    for ( let i in obj ) { // eslint-disable-line no-unused-vars\n        outList[ i ] = obj[ i ];\n    }\n    listOfProperties.forEach( x => {\n        if ( obj.hasOwnProperty( x ) ) {\n            inList[ x ] = obj[ x ];\n            delete outList[ x ];\n        }\n    } )\n    return ( keep ? inList : outList );\n}\n\nexport function noDuplicates ( array ) {\n    let output = [];\n    for ( let i of array ) { // eslint-disable-line no-unused-vars\n        if ( output.indexOf( i ) === -1 ) {\n            output.push( i );\n        }\n    }\n    return output;\n}\n\n// \nexport function twoDigits ( number ) {\n    return ( \"0\" + number ).slice( -2 );\n}\nexport function getDate () {\n    const date = new Date();\n    return [ date.getFullYear(), twoDigits( date.getMonth() + 1 ), twoDigits( date.getDate() ) ].join( \"-\" );\n}\nexport function getTime () {\n    const date = new Date();\n    return [ twoDigits( date.getHours() ), twoDigits( date.getMinutes() ), twoDigits( date.getSeconds() ) ].join( \":\" );\n}\n\nexport function wait ( timeInMiliSeconds ) {\n    var d = new Date();\n    var d2 = null;\n    do { d2 = new Date(); }\n    while( d2-d < timeInMiliSeconds );\n}\n\nexport const publicText = string => {\n    switch ( string ) {\n        case \"provider\":\n            return \"fornecedor\";\n        case \"medium\":\n            return \"mídia\";\n        case \"employee\":\n            return \"operador\";\n        case \"dealer\":\n            return \"dealer\";\n        default:\n            return \"Sem regitro para público.\";\n    }\n}\n\nexport const checkLastChar = ( string, regex ) => {\n    const match = new RegExp( regex ).test( string[ string.length - 1 ] );\n    if ( ! match ) {\n        return string.substr( 0, string.length - 1 );\n    } else {\n        return string;\n    }\n}\n\nexport const isMobile = mobileNumber => {\n    if ( ! mobileNumber.match( /[0-9]{11}/ ) ) {\n        return false\n    }\n    return true;\n}\n\nexport function getPropsFromDocument ( tagId = \"#props\" ) {\n    if ( document.querySelector( tagId ) ) {\n        return JSON.parse( document.querySelector( tagId ).value );\n    } else {\n        return {}\n    }\n}\n\nexport function navTo ( userScreen ) {\n    const l = window.location;\n    const origin = l.origin;\n    const params = l.pathname.split( \"/\" );\n    const userIndex = l.pathname.split( \"/\" ).indexOf( \"user\" );\n    params[ userIndex + 2 ] = userScreen\n    window.location.href = origin + params.join( \"/\" );\n}\n\nexport function noUnicode ( string ) {\n    return decodeURIComponent( JSON.parse( '\"' + string + '\"' ) );\n}\n\nexport function condenseObjs( objArray ) {\n    let output = {};\n    objArray.forEach( obj => {\n        for ( let u in obj ) { // eslint-disable-line no-unused-vars\n            output[ u ] = obj[ u ];\n        }\n    } );\n    return output;\n}\n\nexport function responseWindow ( message, color ) {\n    alert( message );\n}\n\nexport const getByQuery = ( selector ) => document.querySelector( selector );\nexport const valueToObject = element => JSON.parse( element.value );","import React, { Component } from 'react';\nimport Logo from '../logo';\n\nimport { findUrl, getInit } from '../../settings';\nimport { getDate, isEmpty, unPrefixObject } from '../../functions';\n\nexport default class App extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount () {\n        const dateArray = getDate().split( \"-\" );\n        const yearAndMonth = dateArray[ 0 ] + \"-\" + dateArray[ 1 ] + \"-\";\n        const body = {\n            from: yearAndMonth + \"01\",\n            to: yearAndMonth + \"31\"\n        };\n        fetch ( findUrl + \"/people\", getInit( body ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                if ( ! isEmpty( j ) ) {\n                    this.setState( { data: j.map( x => unPrefixObject( x ) ) } )\n                } else {}\n            } else {}\n        } )\n    }\n    listHandler () {\n        if ( this.state.data.length > 0 ) {\n            return this.state.data.map( ( x, i ) => {\n                return (\n                    <li className=\"list-group-item d-flex\">\n                        <span className=\"m-auto\">\n                            { x.birthday }\n                        </span>\n                        <span className=\"m-auto\">\n                            { x.fullName }\n                        </span>\n                        <span className=\"m-auto\">\n                            { x.phone }\n                        </span>\n                        <span className=\"m-auto\">\n                            { x.email }\n                        </span>\n                    </li>\n                )\n            } )\n        }\n        return <li className=\"list-group-item text-center\">Sem registro.</li>;\n    }\n    render () {\n        return (\n            <div>\n                <div className=\"d-flex p-3\"> \n                    <Logo className=\"m-auto p-2 border border-secondary\" />\n                </div> \n                <div>\n                    <h2 className=\"text-center m-auto text-secondary\">\n                        SISTEMA ADMINSTRATIVO\n                    </h2>\n                    <p className=\"text-center mx-auto px-5 py-3 text-muted\">\n                        Escolha onde deseja operar no menu ao lado.\n                    </p>\n                </div>\n                <div className=\"m-3 border\">\n                    <h4 className=\"text-center m-auto p-3\">\n                        <span className=\"mx-3 text-warning\">\n                            <i className=\"fas fa-birthday-cake\"></i>\n                        </span>\n                        <span className=\"border-bottom border-secondary\">\n                            Aniversariantes do mês\n                        </span>\n                        <span className=\"mx-3 text-warning\">\n                            <i className=\"fas fa-birthday-cake\"></i>\n                        </span>\n                    </h4>\n                    <ul className=\"list-group\">{ this.listHandler() }</ul>\n                </div>\n            </div>\n        );\n    }\n}","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport {\n\tfilterObj\n} from '../../functions';\n\n/**\n * \n * PROPS\n * url: URL string to fetch\n * init (optional): init object for fetch API\n * propName: string name of props to pass state through\n * responseHandler (optional): ( json ) => any\n * errorHandler (optional): ( exception ) => void\n */\nexport default class App extends React.Component {\n\tcomponentDidMount () {\n\t\tlet promise;\n\t\tif ( this.props.init ) {\n\t\t\tpromise = fetch( this.props.url, this.props.init );\n\t\t} else {\n\t\t\tpromise = fetch( this.props.url );\n\t\t}\n\t\tpromise.then( r => r.json() )\n\t\t.then( j => {\n\t\t\tif ( j ) {\n\t\t\t\tthis.setState( { [this.props.propName]: ( this.props.responseHandler ? this.props.responseHandler( j ) : j ) } )\n\t\t\t}\n\t\t} )\n\t\t.catch( e => ( this.props.errorHandler ? this.props.errorHandler( e ) : console.warn( e ) ) )\n\t}\n\trender () {\n\t\tlet newProps = filterObj( this.props, [ \"url\", \"init\", \"propName\", \"responseHandler\", \"errorHandler\" ] );\n\t\tif ( this.state ) {\n\t\t\tnewProps[ this.props.propName ] = this.state[ this.props.propName ];\n\t\t}\n\t\treturn React.cloneElement(\n\t\t\tReact.Children.only( this.props.children ),\n\t\t\tnewProps\n\t\t)\n\t}\n}\n","import React, {\n    Component\n} from \"react\";\nimport Select from 'react-select';\n\nimport {\n    peopleUrl,\n    productsUrl,\n    getInit,\n    paymentsUrl,\n    scopeName,\n} from '../../settings';\nimport {\n    responseWindow,\n    unPrefixObject,\n    getDate\n} from \"../../functions\";\n\nimport Http from '../http';\n\n\nexport class Products extends Component {\n    state = {\n        options: [],\n        items: []\n    };\n\n    componentDidMount () {\n        fetch( productsUrl + \"?product_scope=product\" )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                const options = j.map( x => {\n                    let y = unPrefixObject( x );\n                    y.amount = 0;\n                    return y;\n                } );\n                this.setState( { options: options } );\n            }\n        } );\n    }\n    itemsHandler = v => {\n        if ( v ) {\n            const items = v.map( x => {\n                if ( ! this.state.items.some( item => item.value === x.value ) ) {\n                    x.amount = 1;\n                }\n                return x;\n            } );\n            this.setState( { items: items } );\n        }\n    };\n\n    changeHandler ( item, amount ) {\n        const options = this.state.options.map( i => {\n            if ( i.id === item.id ) {\n                let nItem = item;\n                nItem.amount = amount\n                return nItem;\n            }\n            return i;\n        } );\n        this.setState(\n            { options: options },\n            () => {\n                if ( this.props.onChange ) {\n                    this.props.onChange( this.state.options.filter( op => op.amount > 0 ) )\n                }\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                { this.state.options.map( ( option, i ) => {\n                    return (\n                        <div key={ i } >\n                            <span>\n                                <strong>{ option.name }</strong>\n                                <span className=\"text-success px-2\">{ option.price }</span>\n                            </span>\n                            \n                            <div className=\"ml-auto\">\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    className=\"form-control\"\n                                    value={ option.amount }\n                                    onChange={ ev => this.changeHandler( option, ev.target.value ) }\n                                />\n                            </div>\n                        </div>\n                    );\n                } ) }\n            </div>\n        );\n    }\n}\n\n\nexport class NewOrder extends Component {\n    state = {\n        value: \"\",\n        description: \"\",\n        mode: \"\",\n        totalPrice: \"\",\n        items: [],\n        obs: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        if (\n            this.state.customerId\n            &&\n            this.state.employeeId\n            &&\n            this.state.service\n            &&\n            this.state.mode\n            &&\n            this.state.employeeId\n        ) {\n            if ( this.state.totalPrice !== \"\" ) {\n                const pDescription = \"Produtos:\" + this.state.items.map( x => x.name + \"(x\" + x.amount + \")\" ).join( \",\" );\n                let value = \"\";\n                if ( ! ( \"\" + this.state.totalPrice ).match( /,/ ) ) {\n                    value = this.state.totalPrice + \",00\";\n                } else {\n                    value = this.state.totalPrice\n                }\n                const body = {\n                    customerId: this.state.customerId,\n                    employeeId: this.state.employeeId,\n                    service: this.state.service.label,\n                    mode: this.state.mode,\n                    description: pDescription + \"|\" + this.state.obs,\n                    value: value,\n                }\n                fetch( paymentsUrl, getInit( body ) )\n                .then( r => r.json() )\n                .then( j => {\n                    if ( j ) {\n                        responseWindow( \"Pedido cadastrado com sucesso.\" );\n                        window.location.reload( true );\n                    } else {\n                        responseWindow( \"Preencha os campos obrigatórios.\" );\n                    }\n                } )\n            } else {\n                alert( \"Clique em \\\"Calular valor ->\\\" antes de registrar.\" );\n            }\n        } else {\n            alert( \"Preencha os campos acima antes de registrar.\" );\n        }\n    }\n    totalPriceHandler () {\n        if ( ! this.state.service ) {\n            alert( \"Escolha o serviço, por favor.\" );\n        } else {\n            let totalValue = parseFloat( this.state.service.price );\n            if ( this.state.items.length > 0 ) {\n                const productsValue = this.state.items.map( item => {\n                    return parseFloat( item.price )*parseFloat( item.amount )\n                } )\n                .reduce( ( total, currentValue ) => total + currentValue, 0 );\n                totalValue = totalValue + productsValue;\n            }\n            this.setState( { totalPrice: totalValue } );\n        }\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Registro de Pedido\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Cliente\n                            </small>\n                            <Http\n                                url={ peopleUrl + \"?person_scope=customer\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.id, label: y.fullName } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { customerId: v.label } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Funcionário/a\n                            </small>\n                            <Http\n                                url={ peopleUrl + \"?person_scope=employee\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.id, label: y.fullName } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { employeeId: v.label } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    {/*  */}\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Serviço\n                            </small>\n                            <Http\n                                url={ productsUrl + \"?product_scope=service\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.name, label: y.name, price: y.price } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { service: v } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Modo de Pagamento\n                            </small>\n                            <Select\n                                options={ paymentsModes }\n                                onChange={ v => this.updateState( { mode: v.value } ) }\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <div className=\"d-block my-2\">\n                            <small>\n                                Produtos\n                            </small>\n                            <Products onChange={ items => this.updateState( { items: items } ) } />\n                        </div>\n                    </div>\n                    \n                    <div\n                        className=\"col-12\"\n                    >\n                        <div className=\"input-group mb-3 mt-4\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text text-white bg-success\"\n                                onClick={ ev => this.totalPriceHandler() }>\n                                    Calular valor <i className=\"fas fa-arrow-right mx-2\"></i>\n                                </span>\n                            </div>\n                            <input\n                                disabled\n                                value={ this.state.totalPrice }\n                                className=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Clique no botão ao lado para calcular o valor final\"\n                                onChange={ ev => () => {} }\n                            />\n                        </div>\n                    </div>\n                    <div\n                        className=\"col-12\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Observação <small className=\"text-muted\">(opcional)</small>\n                            </small>\n                            <textarea\n                                className=\"form-control\"\n                                value={ this.state.obs }\n                                onChange={ ev => this.updateState( { obs: ev.target.value } ) }\n                                placeholder=\"Descreva alguma situação fora do comum que o sistema não possa identificar de forma automática pelas operações padrão.\"\n                            ></textarea>\n                        </label>\n                    </div>\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Registrar Pedido\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * \n */\nconst paymentsModes = [\n    {\n        value: \"Crédito\",\n        label: \"Crédito\",\n    },\n    {\n        value: \"Débito\",\n        label: \"Débito\",\n    },\n    {\n        value: \"Dinheiro\",\n        label: \"Dinheiro\",\n    }\n]\nexport class NewPayment extends Component {\n    state = {\n        value: \"\",\n        description: \"\",\n        mode: \"\",\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( paymentsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Dados do Pagamento\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Valor\n                            </small>\n                            <input\n                                type=\"text\"\n                                value={ this.state.value }\n                                onChange={ ev => this.updateState( { value: ev.target.value } ) }\n                                className=\"form-control\"\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Modo de Pagamento\n                            </small>\n                            <Select\n                                options={ paymentsModes }\n                                onChange={ v => this.updateState( { mode: v.value } ) }\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Descrição ou observação\n                            </small>\n                            <textarea\n                                className=\"form-control\"\n                                value={ this.state.description }\n                                onChange={ ev => this.updateState( { description: ev.target.value } ) }\n                            ></textarea>\n                        </label>\n                    </div>\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Registrar Pagamento\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * \n */\nexport class NewProduct extends Component {\n    state = {\n        price: \"\",\n        description: \"\",\n        name: \"\",\n        scope: this.props.scope,\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( productsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        const productsData = [\n            {\n                name: \"name\",\n                text: \"Nome do \" + scopeName( this.props.scope ),\n                type: \"text\",\n                col: \"6\",\n            },\n            {\n                name: \"price\",\n                text: \"Preço\",\n                type: \"text\",\n                col: \"6\",\n            },\n            {\n                name: \"description\",\n                text: \"Breve descrição\",\n                type: \"text\",\n                col: \"12\",\n            }\n        ]\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Cadastre seu { scopeName( this.props.scope ) }\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        productsData.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Cadastrar { scopeName( this.props.scope ) }\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n/**\n * url: string url\n * fields: array of { component: JSX* }; *: must render data as children (JSX just a frame)\n * append: JSX append to each row\n * preppend: list header array of strings\n */\nexport class SeeWithoutPrefix extends Component {\n    state = {\n        data: []\n    }\n    initialize () {\n        fetch( this.props.url )\n        .then( r => r.json() )\n        .then( j => this.setState( { data: ( j ? j.map( x => unPrefixObject( x ) ) : [] ) } ) );\n    }\n    componentDidMount () {\n        this.initialize();\n    }\n    preppendHander () {\n        if ( this.props.preppend ) {\n            return (\n                <li className=\"list-group-item d-flex\">\n                    {\n                        this.props.preppend.map( ( y, k ) => {\n                            return ( \n                                <div\n                                    key={ k }\n                                    className=\"m-auto py-1\"\n                                >\n                                    { y }\n                                </div>\n                            )\n                        } )\n                    }\n                </li>\n            )\n        }\n    }\n    appendHandler ( x ) {\n        if ( this.props.append ) {\n            if ( x ) {\n                return (\n                    <div className=\"ml-auto my-auto\">\n                        { this.props.append( x ) }\n                    </div>\n                );\n            }\n        }\n    }\n    contentHandler () {\n        if ( this.state.data.length > 0 ) {\n            return this.state.data.map( ( x, i ) => {\n                return(\n                    <li\n                        key={ i }\n                        className=\"list-group-item d-flex\"\n                    >\n                        {\n                            this.props.fields.map( ( y, k ) => {\n                                return ( \n                                    <td\n                                        key={ k }\n                                        className=\"m-auto py-2\"\n                                    >\n                                        { x[ y ] }\n                                    </td>\n                                )\n                            } ) \n                        }\n                        { this.appendHandler( x ) }\n                    </li>\n                );\n            } )\n        } else {\n            return \"Sem registros.\"\n        }\n    }\n    finderHandler ( value ) {\n        if ( value ) {\n            fetch( this.props.withFinder + \"/\" + this.props.scope + \"/\" + value )\n            .then( r => r.json() )\n            .then( j => {\n                if ( j ) {\n                    this.setState( { data: j.map( x => unPrefixObject( x ) ) } );\n                } else {\n                    this.initialize();\n                }\n            } )\n        } else {\n            this.initialize();\n        }\n    }\n    filterHandler () {\n        if ( this.props.filter ) {\n            return (\n                <label>\n                    <small>\n                        { this.props.filterLabel }\n                    </small>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        onChange={ ev => this.finderHandler( ev.target.value ) }\n                    />\n                </label>\n            )\n        }\n        return \"\"\n    }\n    render () {\n        return (\n            <div>\n                { this.filterHandler() }\n                <ul\n                    className=\"list-group\"\n                >\n                    { this.preppendHander() }\n                    { this.contentHandler() }\n                </ul>\n            </div>\n        );\n    }\n}\nexport class OtherSeeWithoutPrefix extends Component {\n    state = {\n        data: [],\n        from: \"\",\n        to: getDate()\n    }\n    initialize () {\n        fetch( this.props.url )\n        .then( r => r.json() )\n        .then( j => this.setState( { data: ( j ? j.map( x => unPrefixObject( x ) ) : [] ) } ) );\n    }\n    componentDidMount () {\n        this.initialize();\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    preppendHander () {\n        if ( this.props.preppend ) {\n            return (\n                <th className=\"list-group-item d-flex\">\n                    {\n                        this.props.preppend.map( ( y, k ) => {\n                            return ( \n                                <td\n                                    key={ k }\n                                    className=\"m-auto py-1\"\n                                >\n                                    { y }\n                                </td>\n                            )\n                        } )\n                    }\n                </th>\n            )\n        }\n    }\n    appendHandler ( x ) {\n        if ( this.props.append ) {\n            if ( x ) {\n                return (\n                    <div className=\"ml-auto my-auto\">\n                        { this.props.append( x ) }\n                    </div>\n                );\n            }\n        }\n    }\n    contentHandler () {\n        if ( this.state.data.length > 0 ) {\n            return this.state.data.map( ( x, i ) => {\n                return(\n                    <tr\n                        key={ i }\n                        className=\"list-group-item d-flex\"\n                    >\n                        {\n                            this.props.fields.map( ( y, k ) => {\n                                return ( \n                                    <td\n                                        key={ k }\n                                        className=\"m-auto py-2\"\n                                    >\n                                        { x[ y ] }\n                                    </td>\n                                )\n                            } ) \n                        }\n                        { this.appendHandler( x ) }\n                    </tr>\n                );\n            } )\n        } else {\n            return \"Sem registros.\"\n        }\n    }\n    finderHandler () {\n        if ( this.state.to === \"\" ) {\n            this.setState(\n                { to: getDate() },\n                () => {\n                    const body = {\n                        from: this.state.from,\n                        to: ( this.state.to === \"\" ? getDate() : this.state.to ),\n                        field: \"date\"\n                    }\n                    console.log( \"body\", body );\n                    fetch( this.props.withFinder, getInit( body ) )\n                    .then( r => r.json() )\n                    .then( j => {\n                        if ( j ) {\n                            this.setState( { data: j.map( x => unPrefixObject( x ) ) } );\n                        } else {\n                            this.initialize();\n                        }\n                    } )\n                }\n            );\n        } else {\n            const body = {\n                from: this.state.from,\n                to: ( this.state.to === \"\" ? getDate() : this.state.to ),\n                field: \"date\"\n            }\n            console.log( \"body\",body );\n            fetch( this.props.withFinder, getInit( body ) )\n            .then( r => r.json() )\n            .then( j => {\n                if ( j ) {\n                    this.setState( { data: j.map( x => unPrefixObject( x ) ) } );\n                } else {\n                    this.initialize();\n                }\n            } )\n        }\n    }\n    filterHandler () {\n        // if ( this.props.filter ) {\n            console.log( this.state );\n            return (\n                <div>\n                    <label className=\"mx-3\">\n                        <small>\n                            A partir de\n                        </small>\n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            value={ this.state.from }\n                            onChange={ ev => this.setState( { from: ev.target.value }, () => this.finderHandler() ) }\n                        />\n                    </label>\n                    <label className=\"mx-3\">\n                        <small>\n                            Até\n                        </small>\n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            value={ this.state.to }\n                            onChange={ ev => this.setState( { to: ev.target.value }, () => this.finderHandler() ) }\n                        />\n                    </label>\n                </div>\n            )\n        // }\n        // return \"\"\n    }\n    render () {\n        return (\n            <div>\n                { this.filterHandler() }\n                <table\n                    className=\"list-group\"\n                >\n                    { this.preppendHander() }\n                    { this.contentHandler() }\n                </table>\n            </div>\n        );\n    }\n}\n\n/**\n * \n */\nconst data = [\n    {\n        name: \"fullName\",\n        text: \"Nome Completo\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"birthday\",\n        text: \"Nascimento\",\n        type: \"date\",\n        col: \"6\",\n    },\n    {\n        name: \"phone\",\n        text: \"Telefone\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"email\",\n        text: \"email\",\n        type: \"email\",\n        col: \"6\",\n    },\n    {\n        name: \"address\",\n        text: \"Endereço\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"doc\",\n        text: \"Documento\",\n        type: \"text\",\n        col: \"6\",\n    },\n]\n\nexport class MoreGeneral extends Component {\n    state = {\n        fullName: \"\",\n        birthday: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        scope: this.props.scope,\n        doc: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( peopleUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Cadastro realizado com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container p-0\">\n                <div className=\"form-group row\">\n                    {\n                        data.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class NewCustomer extends Component {\n    state = {\n        fullName: \"\",\n        birthday: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        scope: this.props.scope,\n        doc: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( peopleUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Cadastro realizado com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-12\">\n                        <h4 className=\"mb-3\">\n                            Cadastrando <span className={ \"font-weight-bold text-\" + ( this.props.scope === \"employee\" ? \"danger\" : \"success\" ) }>{ scopeName( this.props.scope ) }</span>\n                        </h4>\n                    </div>\n                    {\n                        data.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Confirmar cadastro\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {\n    Component,\n    cloneElement\n} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport {\n    productsUrl,\n    paymentsUrl,\n    peopleUrl,\n    findUrl,\n    findTableUrl,\n    scopeName,\n    getInit,\n    printOrderUrl\n} from '../../settings';\n\nimport Unvailable from '../unvailable/App';\nimport Home from '../tela-inicial/App';\nimport NewUser, {\n    NewProduct,\n    SeeWithoutPrefix,\n    NewOrder,\n    OtherSeeWithoutPrefix\n} from '../form/App';\n\n\nconst SeeUsers = ( props ) => (\n    <div>\n        <SeeWithoutPrefix\n            filter\n            filterLabel=\"Busca por nome\"\n            url={ peopleUrl + \"?person_scope=\" + props.scope }\n            fields={ [ \"fullName\", \"email\", \"phone\" ] }\n            preppend={ [ \"Nome\", \"email\", \"Telefone\" ] }\n            withFinder={ findUrl }\n            scope={ props.scope }\n            key={ props.scope === \"employee\" ? 1 : 2 }\n        ></SeeWithoutPrefix>\n    </div>\n);\n// \nconst updateProductsHandler = data => {\n    let updatedData = {};\n    updatedData[ \"name\" ] = window.prompt( \"Nome do \"  + scopeName( data.scope ) + \":\", data.name );\n    updatedData[ \"price\" ] = window.prompt( \"Preço a ser cobrado pelo \"  + scopeName( data.scope ) + \":\", data.price );\n    if ( data.scope === \"product\" ) {\n        updatedData[ \"stock\" ] = window.prompt( \"Quantidade do \" + scopeName( data.scope ) + \" em estoque:\", data.stock );\n    }\n    fetch( productsUrl + \"/\" + data.id, getInit( updatedData, \"PUT\" ) )\n    .then( r => r.json() )\n    .then( j => {\n        if ( j ) {\n            alert( \"Dados atualizados com sucesso\" );\n            window.location.reload();\n        } else {\n            alert( \"Um erro inesperado ocorreu.\" );\n        }\n    } )\n}\nconst SeeProducts = ( props ) => (\n    <div>\n        <SeeWithoutPrefix\n            url={ productsUrl + \"?product_scope=\" + props.scope }\n            fields={ props.fields }\n            preppend={ props.preppend }\n            key={ props.scope === \"product\" ? 1 : 2 }\n            append={ x => (\n                <button className=\"btn btn-info\"\n                    onClick={ ev => updateProductsHandler( x ) }\n                >\n                    <i className=\"fas fa-pencil\"></i>\n                </button>\n            ) }\n        ></SeeWithoutPrefix>\n    </div>\n);\n// \nconst updateOrdersHandler = data => {\n    window.open( printOrderUrl + \"/\" + data.id );\n    // let updatedData = {};\n    // updatedData[ \"name\" ] = window.prompt( \"Nome do \"  + scopeName( data.scope ) + \":\", data.name );\n    // updatedData[ \"price\" ] = window.prompt( \"Preço a ser cobrado pelo \"  + scopeName( data.scope ) + \":\", data.price );\n    // if ( data.scope === \"product\" ) {\n    //     updatedData[ \"stock\" ] = window.prompt( \"Quantidade do \" + scopeName( data.scope ) + \" em estoque:\", data.stock );\n    // }\n    // fetch( productsUrl + \"/\" + data.id, getInit( updatedData, \"PUT\" ) )\n    // .then( r => r.json() )\n    // .then( j => {\n    //     if ( j ) {\n    //         alert( \"Dados atualizados com sucesso\" );\n    //         window.location.reload();\n    //     } else {\n    //         alert( \"Um erro inesperado ocorreu.\" );\n    //     }\n    // } )\n}\nconst SeeOrders = () => (\n    <div>\n        <OtherSeeWithoutPrefix\n            url={ paymentsUrl }\n            withFinder={ findTableUrl + \"/payments\" }\n            fields={ [ \"date\", \"mode\", \"customerId\", \"employeeId\", \"value\" ] }\n            preppend={ [ \"Data\", \"Modo de Pagamento\", \"Cliente\", \"Funcionário/a\", \"Valor (R$)\" ] }\n            append={ x => (\n                <button className=\"btn btn-info\"\n                    onClick={ ev => updateOrdersHandler( x ) }\n                >\n                    <i className=\"fas fa-printer\"></i>\n                </button>\n            ) }\n        ></OtherSeeWithoutPrefix>\n    </div>\n);\n\nexport default class App extends Component {\n    handleSidebar () {\n        let output;\n        const main = (\n            <div className=\"w-100 p-2\">\n                <main className=\"d-block mb-5 pb-4 mb-sm-0 pb-sm-0\">\n                    <Switch>\n                        <Route\n                            path=\"/novo-funcionario\"\n                            render={ () => <NewUser scope=\"employee\" /> }\n                        />\n                        <Route\n                            path=\"/listar-funcionarios\"\n                            render={ () => <SeeUsers scope=\"employee\" /> }\n                        />\n\n                        <Route\n                            path=\"/novo-cliente\"\n                            render={ () => <NewUser scope=\"customer\" /> }\n                        />\n                        <Route\n                            path=\"/listar-clientes\"\n                            render={ () => <SeeUsers scope=\"customer\" /> }\n                        />\n                        {/*  */}\n                        <Route\n                            path=\"/novo-produto\"\n                            render={ () => <NewProduct scope=\"product\"/> }\n                        />\n                        <Route\n                            path=\"/listar-produtos\"\n                            render={ () => <SeeProducts\n                                scope=\"product\"\n                                fields={ [ \"name\", \"price\", \"stock\" ] }\n                                preppend={ [ <span>Nome</span>, <span>Preço</span>, <span>Estoque</span> ] }\n                            /> }\n                        />\n                        <Route\n                            path=\"/novo-servico\"\n                            render={ () => <NewProduct scope=\"service\" /> }\n                        />\n                        <Route\n                            path=\"/listar-servicos\"\n                            render={ () => <SeeProducts\n                                scope=\"service\"\n                                fields={ [ \"name\", \"price\" ] }\n                                preppend={ [ <span>Nome</span>, <span>Preço</span> ] }\n                            /> }\n                        />\n                        {/*  */}\n                        <Route path=\"/novo-pedido\" component={ NewOrder } />\n                        <Route path=\"/listar-pedidos\" component={ SeeOrders } />\n\n                        <Route path=\"/\" component={ Home } />\n                        <Route component={ Unvailable } />\n                    </Switch>\n                </main>\n            </div>\n        );\n        if ( this.props.sidebar ) {\n            switch ( this.props.sidebarPosition ) {\n                case \"right\":\n                    output = [ main, this.props.sidebar ];\n                    break;\n                default:\n                    output = [ this.props.sidebar, main ];\n            }\n        } else {\n            output = main;\n        }\n        return output.map( ( x, i ) => cloneElement( x, { key: i } ) );\n    }\n    render() {\n        return (\n            <Router>\n            \n                { this.props.header }\n    \n                <div className={ \"d-flex\" + ( this.props.containerClassName ? this.props.containerClassName : \"\" ) }>\n                    \n                    { this.props.bottombar }\n                    \n                    { this.handleSidebar() }\n                    \n                </div>\n    \n            </Router>\n        );\n    }\n}","import React, {\n    Component\n} from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport {\n    navUrl,\n    accountsUrl\n} from '../../settings';\nimport {\n    getByQuery\n} from '../../functions';\n\nexport function PlaceholderNav () {\n    return (\n        <li className=\"ml-3 mb-3 d-flex\">\n            <span className=\"mr-1\">\n                <div className=\"bg-primary rounded-circle\" style={ { width: \"20px\", height: \"20px\" } }></div>\n            </span>\n            <span className=\"mx-2\">\n                <div className=\"bg-primary rounded\" style={ { width: \"100px\", height: \"20px\" } }></div>\n            </span>\n        </li>\n    )\n}\nexport function DesktopNav ( nav ) {\n    if ( nav ) {\n        return (\n            <nav>\n                <ul className=\"list-unstyled\">\n                    { nav.map( ( x, i ) => {\n                        return(\n                            <li className=\"ml-3 mb-3\" key={ i }>\n                                <Link to={ x.url }>\n                                    <span className=\"mr-1\">\n                                        <i className={ x.icon }></i>\n                                    </span>\n                                    <small>\n                                        { x.text }\n                                    </small>\n                                </Link>\n                            </li>\n                        )\n                    } ) }\n                </ul>\n            </nav>\n        );\n    } else {\n        return (\n            <ul className=\"list-unstyled\">\n                { [0,1,2,3,4].map( i => <PlaceholderNav key={ i } /> ) }\n            </ul>\n        );\n    }\n}\nexport function MyMobNav ( nav ) {\n    return (\n        <nav className=\"container\">\n            <ul className=\"list-unstyled row text-center\">\n                { nav.map( ( x, i ) => {\n                    return(\n                        <li className=\"col-6 p-1\" key={ i }>\n                            <Link to={ x.url }>\n                                <div>\n                                    <i className={ x.icon }></i>\n                                </div>\n                                <small>\n                                    { x.text }\n                                </small>\n                            </Link>\n                        </li>\n                    )\n                } ) }\n            </ul>\n        </nav>\n    )\n}\n\nexport default function ( props ) {\n    switch( props.scope ) {\n        case \"mobile\":\n            return MyMobNav( props.items );\n        case \"desktop\":\n            return DesktopNav( props.items );\n        default:\n            return (\n                <ul className=\"list-unstyled\">\n                    {\n                        [ 0, 1, 2, 3, 4 ].map( i => <PlaceholderNav key={ i } /> )\n                    }\n                </ul>\n            );\n    }\n}","import App from './App';\n\nexport default App;","import App from './App';\n\nexport default App;","import React, {\n    Component,\n    Fragment\n} from 'react';\nimport Nav from '../navs';\n\nexport default class extends Component {\n    handleChildren () {\n        if ( this.props.children ) {\n            return (\n                <Fragment>\n                    { this.props.children }\n                    <hr className=\"mx-4\" />\n                </Fragment>\n            )\n        }\n    }\n    render () {\n        return (\n            <aside\n                className={ \"d-none d-sm-block w-25 h-100 \" + this.props.className }\n                style={ { minWidth: \"162px\" } }\n            >\n                { this.handleChildren() }\n\n                <Nav\n                    scope=\"desktop\"\n                    items={ this.props.nav }\n                />\n                \n            </aside>\n        )\n    }\n}","import React from 'react';\n\nimport {\n\tnavigation,\n\tbasename,\n} from './settings';\n\nimport Frame from './components/frame/App';\nimport Aside from './components/aside';\nimport Logo from './components/logo';\n\nimport './index.css';\n\nconst sidebar = (\n\t<Aside\n\t\tnav={ navigation }\n\t\tclassName=\"bg-secondary border-right pt-2 pb-5\"\n\t>\n\t\t<div className=\"my-4\">\n\t\t\t<Logo\n\t\t\t\twidth=\"85\"\n\t\t\t\tclassName=\"d-flex justify-content-center text-primary border border-primary p-2 mx-2\"\n\t\t\t\thref={ basename }\n\t\t\t/>\n\t\t</div>\n\t</Aside>\n);\n\nexport default function () {\n\treturn (\n\t\t<Frame\n\t\t\tnav={ navigation }\n\t\t\tsidebar={ sidebar }\n\t\t\tsidebarPosition=\"left\"\n\t\t/>\n\t)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById( 'root' )\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}