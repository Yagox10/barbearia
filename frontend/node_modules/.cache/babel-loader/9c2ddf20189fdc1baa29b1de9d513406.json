{"ast":null,"code":"var _jsxFileName = \"/home/enriquerene/Projects/dearjohn/frontend/src/components/form/App.js\";\nimport React, { Component } from \"react\";\nimport Select from 'react-select';\nimport { peopleUrl, productsUrl, getInit, paymentsUrl, scopeName } from '../../settings';\nimport { responseWindow, unPrefixObject } from \"../../functions\";\nimport Http from '../http';\n/**\n * \n */\n\nconst orderServices = [{\n  value: 1,\n  label: \"Corte Tesoura\"\n}, {\n  value: 2,\n  label: \"Corte na Máquina\"\n}, {\n  value: 3,\n  label: \"Barba Modelada\"\n}, {\n  value: 4,\n  label: \"Corte na Tesoura e Barba Modelada\"\n}];\nexport class NewOrder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\",\n      description: \"\",\n      mode: \"\"\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    fetch(paymentsUrl, getInit(this.state)).then(r => r.json()).then(j => {\n      if (j) {\n        responseWindow(\"Produto cadastro com sucesso.\");\n      } else {\n        responseWindow(\"Preencha os campos obrigatórios.\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"d-block my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Registro de Pedido\"))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Cliente\"), React.createElement(Http, {\n      url: peopleUrl + \"?person_scope=customer\",\n      responseHandler: j => j.map(x => unPrefixObject(x)).map(y => ({\n        value: y.id,\n        label: y.fullName\n      })),\n      propName: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Select, {\n      onChange: v => this.updateState({\n        customerId: v.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Funcion\\xE1rio/a\"), React.createElement(Http, {\n      url: peopleUrl + \"?person_scope=employee\",\n      responseHandler: j => j.map(x => unPrefixObject(x)).map(y => ({\n        value: y.id,\n        label: y.fullName\n      })),\n      propName: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Select, {\n      onChange: v => this.updateState({\n        employeeId: v.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Servi\\xE7o\"), React.createElement(Select, {\n      options: orderServices,\n      onChange: v => this.updateState({\n        service: v.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Produtos\"), React.createElement(\"button\", {\n      className: \"btn btn-block btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Adicionar Produtos\")))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Modo de Pagamento\"), React.createElement(Select, {\n      options: paymentsModes,\n      onChange: v => this.updateState({\n        mode: v.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Valor Total:\"), React.createElement(\"input\", {\n      value: this.state.sum,\n      disabled: true,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Observa\\xE7\\xE3o \", React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"(opcional)\")), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      value: this.state.obs,\n      onChange: ev => this.updateState({\n        obs: ev.target.value\n      }),\n      placeholder: \"Descreva alguma situa\\xE7\\xE3o fora do comum que o sistema n\\xE3o possa identificar de forma autom\\xE1tica pelas opera\\xE7\\xF5es padr\\xE3o.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 text-center my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: ev => this.submitHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Registrar Pedido\"), React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })))));\n  }\n\n}\n/**\n * \n */\n\nconst paymentsModes = [{\n  value: \"Crédito\",\n  label: \"Crédito\"\n}, {\n  value: \"Débito\",\n  label: \"Débito\"\n}, {\n  value: \"Dinheiro\",\n  label: \"Dinheiro\"\n}];\nexport class NewPayment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\",\n      description: \"\",\n      mode: \"\"\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    fetch(paymentsUrl, getInit(this.state)).then(r => r.json()).then(j => {\n      if (j) {\n        responseWindow(\"Produto cadastro com sucesso.\");\n      } else {\n        responseWindow(\"Preencha os campos obrigatórios.\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"d-block my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Dados do Pagamento\"))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Valor\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: ev => this.updateState({\n        value: ev.target.value\n      }),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Modo de Pagamento\"), React.createElement(Select, {\n      options: paymentsModes,\n      onChange: v => this.updateState({\n        mode: v.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o ou observa\\xE7\\xE3o\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      value: this.state.description,\n      onChange: ev => this.updateState({\n        description: ev.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 text-center my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: ev => this.submitHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Registrar Pagamento\"), React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })))));\n  }\n\n}\n/**\n * \n */\n\nexport class NewProduct extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      price: \"\",\n      description: \"\",\n      name: \"\",\n      scope: this.props.scope\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    fetch(productsUrl, getInit(this.state)).then(r => r.json()).then(j => {\n      if (j) {\n        responseWindow(\"Produto cadastro com sucesso.\");\n      } else {\n        responseWindow(\"Preencha os campos obrigatórios.\");\n      }\n    });\n  }\n\n  render() {\n    const productsData = [{\n      name: \"name\",\n      text: \"Nome do \" + scopeName(this.props.scope),\n      type: \"text\",\n      col: \"6\"\n    }, {\n      name: \"price\",\n      text: \"Preço\",\n      type: \"text\",\n      col: \"6\"\n    }, {\n      name: \"description\",\n      text: \"Breve descrição\",\n      type: \"text\",\n      col: \"12\"\n    }];\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"d-block my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Cadastre seu \", scopeName(this.props.scope)))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, productsData.map((x, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-sm-\" + x.col,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"d-block my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, x.text), React.createElement(\"input\", {\n        type: x.type,\n        value: this.state[x.name],\n        onChange: ev => this.updateState({\n          [x.name]: ev.target.value\n        }),\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      })));\n    }), React.createElement(\"div\", {\n      className: \"col-12 text-center my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: ev => this.submitHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Cadastrar \", scopeName(this.props.scope)), React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    })))));\n  }\n\n}\n/**\n * url: string url\n * fields: array of { component: JSX* }; *: must render data as children (JSX just a frame)\n * append: JSX append to each row\n * preppend: list header array of strings\n */\n\nexport class SeeWithoutPrefix extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.url).then(r => r.json()).then(j => this.setState({\n      data: j.map(x => unPrefixObject(x))\n    }));\n  }\n\n  preppendHander() {\n    if (this.props.preppend) {\n      return React.createElement(\"li\", {\n        className: \"list-group-item d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, this.props.preppend.map((y, k) => {\n        return React.createElement(\"div\", {\n          key: k,\n          className: \"m-auto py-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, y);\n      }));\n    }\n  }\n\n  appendHandler(x) {\n    if (this.props.append) {\n      if (x) {\n        return React.createElement(\"div\", {\n          className: \"ml-auto my-auto\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, this.props.append(x));\n      }\n    }\n  }\n\n  render() {\n    if (this.state.data.length > 0) {\n      return React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, this.preppendHander(), this.state.data.map((x, i) => {\n        return React.createElement(\"li\", {\n          key: i,\n          className: \"list-group-item d-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          },\n          __self: this\n        }, this.props.fields.map((y, k) => {\n          return React.createElement(\"td\", {\n            key: k,\n            className: \"m-auto py-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 462\n            },\n            __self: this\n          }, x[y]);\n        }), this.appendHandler(x));\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, \"Sem registros.\");\n    }\n  }\n\n}\n/**\n * \n */\n\nconst data = [{\n  name: \"fullName\",\n  text: \"Nome Completo\",\n  type: \"text\",\n  col: \"6\"\n}, {\n  name: \"birthday\",\n  text: \"Nascimento\",\n  type: \"date\",\n  col: \"6\"\n}, {\n  name: \"phone\",\n  text: \"Telefone\",\n  type: \"text\",\n  col: \"6\"\n}, {\n  name: \"email\",\n  text: \"email\",\n  type: \"email\",\n  col: \"6\"\n}, {\n  name: \"address\",\n  text: \"Endereço\",\n  type: \"text\",\n  col: \"6\"\n}, {\n  name: \"doc\",\n  text: \"Documento\",\n  type: \"text\",\n  col: \"6\"\n}];\nexport class MoreGeneral extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullName: \"\",\n      birthday: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      scope: this.props.scope,\n      doc: \"\"\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    fetch(peopleUrl, getInit(this.state)).then(r => r.json()).then(j => {\n      if (j) {\n        responseWindow(\"Cadastro realizado com sucesso.\");\n      } else {\n        responseWindow(\"Preencha os campos obrigatórios.\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, data.map((x, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-sm-\" + x.col,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"d-block my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, x.text), React.createElement(\"input\", {\n        type: x.type,\n        value: this.state[x.name],\n        onChange: ev => this.updateState({\n          [x.name]: ev.target.value\n        }),\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      })));\n    })));\n  }\n\n}\nexport default class NewCustomer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullName: \"\",\n      birthday: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      scope: this.props.scope,\n      doc: \"\"\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    fetch(peopleUrl, getInit(this.state)).then(r => r.json()).then(j => {\n      if (j) {\n        responseWindow(\"Cadastro realizado com sucesso.\");\n      } else {\n        responseWindow(\"Preencha os campos obrigatórios.\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, \"Cadastrando \", React.createElement(\"span\", {\n      className: \"font-weight-bold text-\" + (this.props.scope === \"employee\" ? \"danger\" : \"success\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, scopeName(this.props.scope)))), data.map((x, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-sm-\" + x.col,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"d-block my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, x.text), React.createElement(\"input\", {\n        type: x.type,\n        value: this.state[x.name],\n        onChange: ev => this.updateState({\n          [x.name]: ev.target.value\n        }),\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      })));\n    }), React.createElement(\"div\", {\n      className: \"col-12 text-center my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: ev => this.submitHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, \"Confirmar cadastro\"), React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/enriquerene/Projects/dearjohn/frontend/src/components/form/App.js"],"names":["React","Component","Select","peopleUrl","productsUrl","getInit","paymentsUrl","scopeName","responseWindow","unPrefixObject","Http","orderServices","value","label","NewOrder","state","description","mode","updateState","pair","setState","submitHandler","fetch","then","r","json","j","render","map","x","y","id","fullName","v","customerId","employeeId","service","paymentsModes","sum","obs","ev","target","NewPayment","NewProduct","price","name","scope","props","productsData","text","type","col","i","SeeWithoutPrefix","data","componentDidMount","url","preppendHander","preppend","k","appendHandler","append","length","fields","MoreGeneral","birthday","phone","email","address","doc","NewCustomer"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from \"react\";\nimport Select from 'react-select';\n\nimport {\n    peopleUrl,\n    productsUrl,\n    getInit,\n    paymentsUrl,\n    scopeName,\n} from '../../settings';\nimport {\n    responseWindow,\n    unPrefixObject\n} from \"../../functions\";\n\nimport Http from '../http';\n\n/**\n * \n */\n\nconst orderServices = [\n    {\n        value: 1,\n        label: \"Corte Tesoura\",\n    },\n    {\n        value: 2,\n        label: \"Corte na Máquina\",\n    },\n    {\n        value: 3,\n        label: \"Barba Modelada\",\n    },\n    {\n        value: 4,\n        label: \"Corte na Tesoura e Barba Modelada\",\n    }\n]\n\n\nexport class NewOrder extends Component {\n    state = {\n        value: \"\",\n        description: \"\",\n        mode: \"\",\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( paymentsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Registro de Pedido\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Cliente\n                            </small>\n                            <Http\n                                url={ peopleUrl + \"?person_scope=customer\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.id, label: y.fullName } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { customerId: v.value } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Funcionário/a\n                            </small>\n                            <Http\n                                url={ peopleUrl + \"?person_scope=employee\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.id, label: y.fullName } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { employeeId: v.value } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    {/*  */}\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Serviço\n                            </small>\n                            <Select\n                                options={ orderServices }\n                                onChange={ v => this.updateState( { service: v.value } ) }\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Produtos\n                            </small>\n                            <button className=\"btn btn-block btn-primary\">\n                                <i className=\"fas fa-plus\"></i>\n                                <span className=\"mx-1\">\n                                    Adicionar Produtos\n                                </span>\n                            </button>\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Modo de Pagamento\n                            </small>\n                            <Select\n                                options={ paymentsModes }\n                                onChange={ v => this.updateState( { mode: v.value } ) }\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Valor Total:\n                            </small>\n                            <input\n                                value={ this.state.sum }\n                                disabled\n                                className=\"form-control\"\n                            />\n                        </label>\n                    </div>\n                    {/*  */}\n                    <div\n                        className=\"col-12\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Observação <small className=\"text-muted\">(opcional)</small>\n                            </small>\n                            <textarea\n                                className=\"form-control\"\n                                value={ this.state.obs }\n                                onChange={ ev => this.updateState( { obs: ev.target.value } ) }\n                                placeholder=\"Descreva alguma situação fora do comum que o sistema não possa identificar de forma automática pelas operações padrão.\"\n                            ></textarea>\n                        </label>\n                    </div>\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Registrar Pedido\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * \n */\nconst paymentsModes = [\n    {\n        value: \"Crédito\",\n        label: \"Crédito\",\n    },\n    {\n        value: \"Débito\",\n        label: \"Débito\",\n    },\n    {\n        value: \"Dinheiro\",\n        label: \"Dinheiro\",\n    }\n]\nexport class NewPayment extends Component {\n    state = {\n        value: \"\",\n        description: \"\",\n        mode: \"\",\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( paymentsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Dados do Pagamento\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Valor\n                            </small>\n                            <input\n                                type=\"text\"\n                                value={ this.state.value }\n                                onChange={ ev => this.updateState( { value: ev.target.value } ) }\n                                className=\"form-control\"\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Modo de Pagamento\n                            </small>\n                            <Select\n                                options={ paymentsModes }\n                                onChange={ v => this.updateState( { mode: v.value } ) }\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Descrição ou observação\n                            </small>\n                            <textarea\n                                className=\"form-control\"\n                                value={ this.state.description }\n                                onChange={ ev => this.updateState( { description: ev.target.value } ) }\n                            ></textarea>\n                        </label>\n                    </div>\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Registrar Pagamento\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * \n */\nexport class NewProduct extends Component {\n    state = {\n        price: \"\",\n        description: \"\",\n        name: \"\",\n        scope: this.props.scope,\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( productsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        const productsData = [\n            {\n                name: \"name\",\n                text: \"Nome do \" + scopeName( this.props.scope ),\n                type: \"text\",\n                col: \"6\",\n            },\n            {\n                name: \"price\",\n                text: \"Preço\",\n                type: \"text\",\n                col: \"6\",\n            },\n            {\n                name: \"description\",\n                text: \"Breve descrição\",\n                type: \"text\",\n                col: \"12\",\n            }\n        ]\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Cadastre seu { scopeName( this.props.scope ) }\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        productsData.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Cadastrar { scopeName( this.props.scope ) }\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n/**\n * url: string url\n * fields: array of { component: JSX* }; *: must render data as children (JSX just a frame)\n * append: JSX append to each row\n * preppend: list header array of strings\n */\nexport class SeeWithoutPrefix extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount () {\n        fetch( this.props.url )\n        .then( r => r.json() )\n        .then( j => this.setState( { data: j.map( x => unPrefixObject( x ) ) } ) );\n    }\n    preppendHander () {\n        if ( this.props.preppend ) {\n            return (\n                <li className=\"list-group-item d-flex\">\n                    {\n                        this.props.preppend.map( ( y, k ) => {\n                            return ( \n                                <div\n                                    key={ k }\n                                    className=\"m-auto py-1\"\n                                >\n                                    { y }\n                                </div>\n                            )\n                        } )\n                    }\n                </li>\n            )\n        }\n    }\n    appendHandler ( x ) {\n        if ( this.props.append ) {\n            if ( x ) {\n                return (\n                    <div className=\"ml-auto my-auto\">\n                        { this.props.append( x ) }\n                    </div>\n                );\n            }\n        }\n    }\n    render () {\n        if ( this.state.data.length > 0 ) {\n            return (\n                <ul\n                    className=\"list-group\"\n                >\n                    { this.preppendHander() }\n                    {\n                        this.state.data.map( ( x, i ) => {\n                            return(\n                                <li\n                                    key={ i }\n                                    className=\"list-group-item d-flex\"\n                                >\n                                    {\n                                        this.props.fields.map( ( y, k ) => {\n                                            return ( \n                                                <td\n                                                    key={ k }\n                                                    className=\"m-auto py-2\"\n                                                >\n                                                    { x[ y ] }\n                                                </td>\n                                            )\n                                        } ) \n                                    }\n                                    { this.appendHandler( x ) }\n                                </li>\n                            );\n                        } )\n                    }\n                </ul>\n            );\n        } else {\n            return <div>Sem registros.</div>\n        }\n    }\n}\n\n/**\n * \n */\nconst data = [\n    {\n        name: \"fullName\",\n        text: \"Nome Completo\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"birthday\",\n        text: \"Nascimento\",\n        type: \"date\",\n        col: \"6\",\n    },\n    {\n        name: \"phone\",\n        text: \"Telefone\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"email\",\n        text: \"email\",\n        type: \"email\",\n        col: \"6\",\n    },\n    {\n        name: \"address\",\n        text: \"Endereço\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"doc\",\n        text: \"Documento\",\n        type: \"text\",\n        col: \"6\",\n    },\n]\n\nexport class MoreGeneral extends Component {\n    state = {\n        fullName: \"\",\n        birthday: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        scope: this.props.scope,\n        doc: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( peopleUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Cadastro realizado com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container p-0\">\n                <div className=\"form-group row\">\n                    {\n                        data.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class NewCustomer extends Component {\n    state = {\n        fullName: \"\",\n        birthday: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        scope: this.props.scope,\n        doc: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( peopleUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Cadastro realizado com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-12\">\n                        <h4 className=\"mb-3\">\n                            Cadastrando <span className={ \"font-weight-bold text-\" + ( this.props.scope === \"employee\" ? \"danger\" : \"success\" ) }>{ scopeName( this.props.scope ) }</span>\n                        </h4>\n                    </div>\n                    {\n                        data.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Confirmar cadastro\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}