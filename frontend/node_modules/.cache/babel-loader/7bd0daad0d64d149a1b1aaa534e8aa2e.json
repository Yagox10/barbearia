{"ast":null,"code":"var _jsxFileName = \"/home/enriquerene/Projects/customers/dearjohn/frontend/src/components/form/App.js\";\nimport React, { Component } from \"react\";\nimport Select from 'react-select';\nimport { peopleUrl, productsUrl, getInit, paymentsUrl, scopeName } from '../../settings';\nimport { responseWindow, unPrefixObject } from \"../../functions\";\nimport Http from '../http';\nexport class Products extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      options: [],\n      items: []\n    };\n\n    this.itemsHandler = v => {\n      if (v) {\n        const items = v.map(x => {\n          if (!this.state.items.some(item => item.value === x.value)) {\n            x.amount = 1;\n          }\n\n          return x;\n        });\n        this.setState({\n          items: items\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(productsUrl + \"?product_scope=product\").then(r => r.json()).then(j => {\n      if (j) {\n        const options = j.map(x => {\n          let y = unPrefixObject(x);\n          y.amount = 0;\n          return y;\n        });\n        this.setState({\n          options: options\n        });\n      }\n    });\n  }\n\n  changeHandler(item, amount) {\n    const options = this.state.options.map(i => {\n      if (i.id === item.id) {\n        let nItem = item;\n        nItem.amount = amount;\n        return nItem;\n      }\n\n      return i;\n    });\n    this.setState({\n      options: options\n    }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.state.options.filter(op => op.amount > 0));\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.options.map((option, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, option.name), React.createElement(\"span\", {\n        className: \"text-success px-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, option.price)), React.createElement(\"div\", {\n        className: \"ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        className: \"form-control\",\n        value: option.amount,\n        onChange: ev => this.changeHandler(option, ev.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    }));\n  }\n\n}\nexport class NewOrder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\",\n      description: \"\",\n      mode: \"\",\n      totalPrice: \"\",\n      items: [],\n      obs: \"\"\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    if (this.state.customerId && this.state.employeeId && this.state.service && this.state.mode && this.state.employeeId) {\n      const pDescription = \"Produtos:\" + this.state.items.map(x => x.name + \"(x\" + x.amount + \")\").join(\",\");\n      console.log(typeof \"\" + this.state.totalPrice); // if ( ! this.state.totalPrice.match( /,/ ) ) {\n      // }\n\n      const body = {\n        customerId: this.state.customerId,\n        employeeId: this.state.employeeId,\n        service: this.state.service.label,\n        mode: this.state.mode,\n        description: pDescription + \"|\" + this.state.obs,\n        value: this.state.totalPrice\n      };\n      console.log(\"body\", body); // fetch( paymentsUrl, getInit( body ) )\n      // .then( r => r.json() )\n      // .then( j => {\n      //     if ( j ) {\n      //         responseWindow( \"Pedido cadastrado com sucesso.\" );\n      //     } else {\n      //         responseWindow( \"Preencha os campos obrigatórios.\" );\n      //     }\n      // } )\n    } else {\n      alert(\"Preencha os campos acima antes de registrar.\");\n    }\n  }\n\n  totalPriceHandler() {\n    if (!this.state.service) {\n      alert(\"Escolha o serviço, por favor.\");\n    } else {\n      let totalValue = parseFloat(this.state.service.price);\n\n      if (this.state.items.length > 0) {\n        const productsValue = this.state.items.map(item => {\n          return parseFloat(item.price) * parseFloat(item.amount);\n        }).reduce((total, currentValue) => total + currentValue, 0);\n        totalValue = totalValue + productsValue;\n      }\n\n      this.setState({\n        totalPrice: totalValue\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"d-block my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Registro de Pedido\"))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Cliente\"), React.createElement(Http, {\n      url: peopleUrl + \"?person_scope=customer\",\n      responseHandler: j => j.map(x => unPrefixObject(x)).map(y => ({\n        value: y.id,\n        label: y.fullName\n      })),\n      propName: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Select, {\n      onChange: v => this.updateState({\n        customerId: v.label\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Funcion\\xE1rio/a\"), React.createElement(Http, {\n      url: peopleUrl + \"?person_scope=employee\",\n      responseHandler: j => j.map(x => unPrefixObject(x)).map(y => ({\n        value: y.id,\n        label: y.fullName\n      })),\n      propName: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Select, {\n      onChange: v => this.updateState({\n        employeeId: v.label\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Servi\\xE7o\"), React.createElement(Http, {\n      url: productsUrl + \"?product_scope=service\",\n      responseHandler: j => j.map(x => unPrefixObject(x)).map(y => ({\n        value: y.name,\n        label: y.name,\n        price: y.price\n      })),\n      propName: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Select, {\n      onChange: v => this.updateState({\n        service: v\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Modo de Pagamento\"), React.createElement(Select, {\n      options: paymentsModes,\n      onChange: v => this.updateState({\n        mode: v.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Produtos\"), React.createElement(Products, {\n      onChange: items => this.updateState({\n        items: items\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-3 mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text text-white bg-success\",\n      onClick: ev => this.totalPriceHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Calular valor \", React.createElement(\"i\", {\n      className: \"fas fa-arrow-right mx-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      disabled: true,\n      value: this.state.totalPrice,\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Clique no bot\\xE3o ao lado para calcular o valor final\",\n      onChange: ev => () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Observa\\xE7\\xE3o \", React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"(opcional)\")), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      value: this.state.obs,\n      onChange: ev => this.updateState({\n        obs: ev.target.value\n      }),\n      placeholder: \"Descreva alguma situa\\xE7\\xE3o fora do comum que o sistema n\\xE3o possa identificar de forma autom\\xE1tica pelas opera\\xE7\\xF5es padr\\xE3o.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 text-center my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: ev => this.submitHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Registrar Pedido\"), React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })))));\n  }\n\n}\n/**\n * \n */\n\nconst paymentsModes = [{\n  value: \"Crédito\",\n  label: \"Crédito\"\n}, {\n  value: \"Débito\",\n  label: \"Débito\"\n}, {\n  value: \"Dinheiro\",\n  label: \"Dinheiro\"\n}];\nexport class NewPayment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\",\n      description: \"\",\n      mode: \"\"\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    fetch(paymentsUrl, getInit(this.state)).then(r => r.json()).then(j => {\n      if (j) {\n        responseWindow(\"Produto cadastro com sucesso.\");\n      } else {\n        responseWindow(\"Preencha os campos obrigatórios.\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"d-block my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Dados do Pagamento\"))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Valor\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: ev => this.updateState({\n        value: ev.target.value\n      }),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Modo de Pagamento\"), React.createElement(Select, {\n      options: paymentsModes,\n      onChange: v => this.updateState({\n        mode: v.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"d-block my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o ou observa\\xE7\\xE3o\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      value: this.state.description,\n      onChange: ev => this.updateState({\n        description: ev.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 text-center my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: ev => this.submitHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"Registrar Pagamento\"), React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    })))));\n  }\n\n}\n/**\n * \n */\n\nexport class NewProduct extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      price: \"\",\n      description: \"\",\n      name: \"\",\n      scope: this.props.scope\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    fetch(productsUrl, getInit(this.state)).then(r => r.json()).then(j => {\n      if (j) {\n        responseWindow(\"Produto cadastro com sucesso.\");\n      } else {\n        responseWindow(\"Preencha os campos obrigatórios.\");\n      }\n    });\n  }\n\n  render() {\n    const productsData = [{\n      name: \"name\",\n      text: \"Nome do \" + scopeName(this.props.scope),\n      type: \"text\",\n      col: \"6\"\n    }, {\n      name: \"price\",\n      text: \"Preço\",\n      type: \"text\",\n      col: \"6\"\n    }, {\n      name: \"description\",\n      text: \"Breve descrição\",\n      type: \"text\",\n      col: \"12\"\n    }];\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"d-block my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \"Cadastre seu \", scopeName(this.props.scope)))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, productsData.map((x, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-sm-\" + x.col,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"d-block my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, x.text), React.createElement(\"input\", {\n        type: x.type,\n        value: this.state[x.name],\n        onChange: ev => this.updateState({\n          [x.name]: ev.target.value\n        }),\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      })));\n    }), React.createElement(\"div\", {\n      className: \"col-12 text-center my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: ev => this.submitHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, \"Cadastrar \", scopeName(this.props.scope)), React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    })))));\n  }\n\n}\n/**\n * url: string url\n * fields: array of { component: JSX* }; *: must render data as children (JSX just a frame)\n * append: JSX append to each row\n * preppend: list header array of strings\n */\n\nexport class SeeWithoutPrefix extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  initialize() {\n    fetch(this.props.url).then(r => r.json()).then(j => this.setState({\n      data: j ? j.map(x => unPrefixObject(x)) : []\n    }));\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  preppendHander() {\n    if (this.props.preppend) {\n      return React.createElement(\"li\", {\n        className: \"list-group-item d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, this.props.preppend.map((y, k) => {\n        return React.createElement(\"div\", {\n          key: k,\n          className: \"m-auto py-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532\n          },\n          __self: this\n        }, y);\n      }));\n    }\n  }\n\n  appendHandler(x) {\n    if (this.props.append) {\n      if (x) {\n        return React.createElement(\"div\", {\n          className: \"ml-auto my-auto\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549\n          },\n          __self: this\n        }, this.props.append(x));\n      }\n    }\n  }\n\n  finderHandler(value) {\n    if (value) {\n      fetch(this.props.withFinder + \"/\" + this.props.scope + \"/\" + value).then(r => r.json()).then(j => {\n        if (j) {\n          this.setState({\n            data: j.map(x => unPrefixObject(x))\n          });\n        } else {\n          this.initialize();\n        }\n      });\n    } else {\n      this.initialize();\n    }\n  }\n\n  contentHandler() {\n    if (this.state.data.length > 0) {\n      return this.state.data.map((x, i) => {\n        return React.createElement(\"li\", {\n          key: i,\n          className: \"list-group-item d-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575\n          },\n          __self: this\n        }, this.props.fields.map((y, k) => {\n          return React.createElement(\"td\", {\n            key: k,\n            className: \"m-auto py-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 582\n            },\n            __self: this\n          }, x[y]);\n        }), this.appendHandler(x));\n      });\n    } else {\n      return \"Sem registros.\";\n    }\n  }\n\n  filterHandler() {\n    if (this.props.filter) {\n      return React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"Busca por nome\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        onChange: ev => this.finderHandler(ev.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }));\n    }\n\n    return \"\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, this.filterHandler(), React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, this.preppendHander(), this.contentHandler()));\n  }\n\n}\n/**\n * \n */\n\nconst data = [{\n  name: \"fullName\",\n  text: \"Nome Completo\",\n  type: \"text\",\n  col: \"6\"\n}, {\n  name: \"birthday\",\n  text: \"Nascimento\",\n  type: \"date\",\n  col: \"6\"\n}, {\n  name: \"phone\",\n  text: \"Telefone\",\n  type: \"text\",\n  col: \"6\"\n}, {\n  name: \"email\",\n  text: \"email\",\n  type: \"email\",\n  col: \"6\"\n}, {\n  name: \"address\",\n  text: \"Endereço\",\n  type: \"text\",\n  col: \"6\"\n}, {\n  name: \"doc\",\n  text: \"Documento\",\n  type: \"text\",\n  col: \"6\"\n}];\nexport class MoreGeneral extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullName: \"\",\n      birthday: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      scope: this.props.scope,\n      doc: \"\"\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    fetch(peopleUrl, getInit(this.state)).then(r => r.json()).then(j => {\n      if (j) {\n        responseWindow(\"Cadastro realizado com sucesso.\");\n      } else {\n        responseWindow(\"Preencha os campos obrigatórios.\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, data.map((x, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-sm-\" + x.col,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"d-block my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }, x.text), React.createElement(\"input\", {\n        type: x.type,\n        value: this.state[x.name],\n        onChange: ev => this.updateState({\n          [x.name]: ev.target.value\n        }),\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      })));\n    })));\n  }\n\n}\nexport default class NewCustomer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullName: \"\",\n      birthday: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      scope: this.props.scope,\n      doc: \"\"\n    };\n  }\n\n  updateState(pair) {\n    this.setState(pair);\n  }\n\n  submitHandler() {\n    fetch(peopleUrl, getInit(this.state)).then(r => r.json()).then(j => {\n      if (j) {\n        responseWindow(\"Cadastro realizado com sucesso.\");\n      } else {\n        responseWindow(\"Preencha os campos obrigatórios.\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758\n      },\n      __self: this\n    }, \"Cadastrando \", React.createElement(\"span\", {\n      className: \"font-weight-bold text-\" + (this.props.scope === \"employee\" ? \"danger\" : \"success\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759\n      },\n      __self: this\n    }, scopeName(this.props.scope)))), data.map((x, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-sm-\" + x.col,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"d-block my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, x.text), React.createElement(\"input\", {\n        type: x.type,\n        value: this.state[x.name],\n        onChange: ev => this.updateState({\n          [x.name]: ev.target.value\n        }),\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        },\n        __self: this\n      })));\n    }), React.createElement(\"div\", {\n      className: \"col-12 text-center my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: ev => this.submitHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789\n      },\n      __self: this\n    }, \"Confirmar cadastro\"), React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/enriquerene/Projects/customers/dearjohn/frontend/src/components/form/App.js"],"names":["React","Component","Select","peopleUrl","productsUrl","getInit","paymentsUrl","scopeName","responseWindow","unPrefixObject","Http","Products","state","options","items","itemsHandler","v","map","x","some","item","value","amount","setState","componentDidMount","fetch","then","r","json","j","y","changeHandler","i","id","nItem","props","onChange","filter","op","render","option","name","price","ev","target","NewOrder","description","mode","totalPrice","obs","updateState","pair","submitHandler","customerId","employeeId","service","pDescription","join","console","log","body","label","alert","totalPriceHandler","totalValue","parseFloat","length","productsValue","reduce","total","currentValue","fullName","paymentsModes","NewPayment","NewProduct","scope","productsData","text","type","col","SeeWithoutPrefix","data","initialize","url","preppendHander","preppend","k","appendHandler","append","finderHandler","withFinder","contentHandler","fields","filterHandler","MoreGeneral","birthday","phone","email","address","doc","NewCustomer"],"mappings":";AAAA,OAAOA,KAAP,IACIC,SADJ,QAEO,OAFP;AAGA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SACIC,SADJ,EAEIC,WAFJ,EAGIC,OAHJ,EAIIC,WAJJ,EAKIC,SALJ,QAMO,gBANP;AAOA,SACIC,cADJ,EAEIC,cAFJ,QAGO,iBAHP;AAKA,OAAOC,IAAP,MAAiB,SAAjB;AAGA,OAAO,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACpCW,KADoC,GAC5B;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAD4B;;AAAA,SAoBpCC,YApBoC,GAoBrBC,CAAC,IAAI;AAChB,UAAKA,CAAL,EAAS;AACL,cAAMF,KAAK,GAAGE,CAAC,CAACC,GAAF,CAAOC,CAAC,IAAI;AACtB,cAAK,CAAE,KAAKN,KAAL,CAAWE,KAAX,CAAiBK,IAAjB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeH,CAAC,CAACG,KAAhD,CAAP,EAAiE;AAC7DH,YAAAA,CAAC,CAACI,MAAF,GAAW,CAAX;AACH;;AACD,iBAAOJ,CAAP;AACH,SALa,CAAd;AAMA,aAAKK,QAAL,CAAe;AAAET,UAAAA,KAAK,EAAEA;AAAT,SAAf;AACH;AACJ,KA9BmC;AAAA;;AAMpCU,EAAAA,iBAAiB,GAAI;AACjBC,IAAAA,KAAK,CAAErB,WAAW,GAAG,wBAAhB,CAAL,CACCsB,IADD,CACOC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADZ,EAECF,IAFD,CAEOG,CAAC,IAAI;AACR,UAAKA,CAAL,EAAS;AACL,cAAMhB,OAAO,GAAGgB,CAAC,CAACZ,GAAF,CAAOC,CAAC,IAAI;AACxB,cAAIY,CAAC,GAAGrB,cAAc,CAAES,CAAF,CAAtB;AACAY,UAAAA,CAAC,CAACR,MAAF,GAAW,CAAX;AACA,iBAAOQ,CAAP;AACH,SAJe,CAAhB;AAKA,aAAKP,QAAL,CAAe;AAAEV,UAAAA,OAAO,EAAEA;AAAX,SAAf;AACH;AACJ,KAXD;AAYH;;AAaDkB,EAAAA,aAAa,CAAGX,IAAH,EAASE,MAAT,EAAkB;AAC3B,UAAMT,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBI,GAAnB,CAAwBe,CAAC,IAAI;AACzC,UAAKA,CAAC,CAACC,EAAF,KAASb,IAAI,CAACa,EAAnB,EAAwB;AACpB,YAAIC,KAAK,GAAGd,IAAZ;AACAc,QAAAA,KAAK,CAACZ,MAAN,GAAeA,MAAf;AACA,eAAOY,KAAP;AACH;;AACD,aAAOF,CAAP;AACH,KAPe,CAAhB;AAQA,SAAKT,QAAL,CACI;AAAEV,MAAAA,OAAO,EAAEA;AAAX,KADJ,EAEI,MAAM;AACF,UAAK,KAAKsB,KAAL,CAAWC,QAAhB,EAA2B;AACvB,aAAKD,KAAL,CAAWC,QAAX,CAAqB,KAAKxB,KAAL,CAAWC,OAAX,CAAmBwB,MAAnB,CAA2BC,EAAE,IAAIA,EAAE,CAAChB,MAAH,GAAY,CAA7C,CAArB;AACH;AACJ,KANL;AAQH;;AAEDiB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAK3B,KAAL,CAAWC,OAAX,CAAmBI,GAAnB,CAAwB,CAAEuB,MAAF,EAAUR,CAAV,KAAiB;AACvC,aACI;AAAK,QAAA,GAAG,EAAGA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAUQ,MAAM,CAACC,IAAjB,CADJ,EAEI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCD,MAAM,CAACE,KAA7C,CAFJ,CADJ,EAMI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,GAAG,EAAC,GAFR;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,KAAK,EAAGF,MAAM,CAAClB,MAJnB;AAKI,QAAA,QAAQ,EAAGqB,EAAE,IAAI,KAAKZ,aAAL,CAAoBS,MAApB,EAA4BG,EAAE,CAACC,MAAH,CAAUvB,KAAtC,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CANJ,CADJ;AAkBH,KAnBC,CADN,CADJ;AAwBH;;AA5EmC;AAgFxC,OAAO,MAAMwB,QAAN,SAAuB5C,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACpCW,KADoC,GAC5B;AACJS,MAAAA,KAAK,EAAE,EADH;AAEJyB,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,UAAU,EAAE,EAJR;AAKJlC,MAAAA,KAAK,EAAE,EALH;AAMJmC,MAAAA,GAAG,EAAE;AAND,KAD4B;AAAA;;AASpCC,EAAAA,WAAW,CAAGC,IAAH,EAAU;AACjB,SAAK5B,QAAL,CAAe4B,IAAf;AACH;;AACDC,EAAAA,aAAa,GAAI;AACb,QACI,KAAKxC,KAAL,CAAWyC,UAAX,IAEA,KAAKzC,KAAL,CAAW0C,UAFX,IAIA,KAAK1C,KAAL,CAAW2C,OAJX,IAMA,KAAK3C,KAAL,CAAWmC,IANX,IAQA,KAAKnC,KAAL,CAAW0C,UATf,EAUE;AACE,YAAME,YAAY,GAAG,cAAc,KAAK5C,KAAL,CAAWE,KAAX,CAAiBG,GAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACuB,IAAF,GAAS,IAAT,GAAgBvB,CAAC,CAACI,MAAlB,GAA2B,GAAtD,EAA4DmC,IAA5D,CAAkE,GAAlE,CAAnC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,OAAO,EAAP,GAAY,KAAK/C,KAAL,CAAWoC,UAApC,EAFF,CAGE;AACA;;AACA,YAAMY,IAAI,GAAG;AACTP,QAAAA,UAAU,EAAE,KAAKzC,KAAL,CAAWyC,UADd;AAETC,QAAAA,UAAU,EAAE,KAAK1C,KAAL,CAAW0C,UAFd;AAGTC,QAAAA,OAAO,EAAE,KAAK3C,KAAL,CAAW2C,OAAX,CAAmBM,KAHnB;AAITd,QAAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWmC,IAJR;AAKTD,QAAAA,WAAW,EAAEU,YAAY,GAAG,GAAf,GAAqB,KAAK5C,KAAL,CAAWqC,GALpC;AAMT5B,QAAAA,KAAK,EAAE,KAAKT,KAAL,CAAWoC;AANT,OAAb;AAQAU,MAAAA,OAAO,CAACC,GAAR,CAAa,MAAb,EAAqBC,IAArB,EAbF,CAcE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAjCD,MAiCO;AACHE,MAAAA,KAAK,CAAE,8CAAF,CAAL;AACH;AACJ;;AACDC,EAAAA,iBAAiB,GAAI;AACjB,QAAK,CAAE,KAAKnD,KAAL,CAAW2C,OAAlB,EAA4B;AACxBO,MAAAA,KAAK,CAAE,+BAAF,CAAL;AACH,KAFD,MAEO;AACH,UAAIE,UAAU,GAAGC,UAAU,CAAE,KAAKrD,KAAL,CAAW2C,OAAX,CAAmBb,KAArB,CAA3B;;AACA,UAAK,KAAK9B,KAAL,CAAWE,KAAX,CAAiBoD,MAAjB,GAA0B,CAA/B,EAAmC;AAC/B,cAAMC,aAAa,GAAG,KAAKvD,KAAL,CAAWE,KAAX,CAAiBG,GAAjB,CAAsBG,IAAI,IAAI;AAChD,iBAAO6C,UAAU,CAAE7C,IAAI,CAACsB,KAAP,CAAV,GAAyBuB,UAAU,CAAE7C,IAAI,CAACE,MAAP,CAA1C;AACH,SAFqB,EAGrB8C,MAHqB,CAGb,CAAEC,KAAF,EAASC,YAAT,KAA2BD,KAAK,GAAGC,YAHtB,EAGoC,CAHpC,CAAtB;AAIAN,QAAAA,UAAU,GAAGA,UAAU,GAAGG,aAA1B;AACH;;AACD,WAAK5C,QAAL,CAAe;AAAEyB,QAAAA,UAAU,EAAEgB;AAAd,OAAf;AACH;AACJ;;AACDzB,EAAAA,MAAM,GAAI;AACN,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII,oBAAC,IAAD;AACI,MAAA,GAAG,EAAGpC,SAAS,GAAG,wBADtB;AAEI,MAAA,eAAe,EAAG0B,CAAC,IAAIA,CAAC,CAACZ,GAAF,CAAOC,CAAC,IAAIT,cAAc,CAAES,CAAF,CAA1B,EAAkCD,GAAlC,CAAuCa,CAAC,KAAM;AAAET,QAAAA,KAAK,EAAES,CAAC,CAACG,EAAX;AAAe4B,QAAAA,KAAK,EAAE/B,CAAC,CAACyC;AAAxB,OAAN,CAAxC,CAF3B;AAGI,MAAA,QAAQ,EAAC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAGvD,CAAC,IAAI,KAAKkC,WAAL,CAAkB;AAAEG,QAAAA,UAAU,EAAErC,CAAC,CAAC6C;AAAhB,OAAlB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAJJ,CAHJ,CADJ,EAmBI;AACI,MAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAII,oBAAC,IAAD;AACI,MAAA,GAAG,EAAG1D,SAAS,GAAG,wBADtB;AAEI,MAAA,eAAe,EAAG0B,CAAC,IAAIA,CAAC,CAACZ,GAAF,CAAOC,CAAC,IAAIT,cAAc,CAAES,CAAF,CAA1B,EAAkCD,GAAlC,CAAuCa,CAAC,KAAM;AAAET,QAAAA,KAAK,EAAES,CAAC,CAACG,EAAX;AAAe4B,QAAAA,KAAK,EAAE/B,CAAC,CAACyC;AAAxB,OAAN,CAAxC,CAF3B;AAGI,MAAA,QAAQ,EAAC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAGvD,CAAC,IAAI,KAAKkC,WAAL,CAAkB;AAAEI,QAAAA,UAAU,EAAEtC,CAAC,CAAC6C;AAAhB,OAAlB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAJJ,CAHJ,CAnBJ,EAsCI;AACI,MAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAII,oBAAC,IAAD;AACI,MAAA,GAAG,EAAGzD,WAAW,GAAG,wBADxB;AAEI,MAAA,eAAe,EAAGyB,CAAC,IAAIA,CAAC,CAACZ,GAAF,CAAOC,CAAC,IAAIT,cAAc,CAAES,CAAF,CAA1B,EAAkCD,GAAlC,CAAuCa,CAAC,KAAM;AAAET,QAAAA,KAAK,EAAES,CAAC,CAACW,IAAX;AAAiBoB,QAAAA,KAAK,EAAE/B,CAAC,CAACW,IAA1B;AAAgCC,QAAAA,KAAK,EAAEZ,CAAC,CAACY;AAAzC,OAAN,CAAxC,CAF3B;AAGI,MAAA,QAAQ,EAAC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAG1B,CAAC,IAAI,KAAKkC,WAAL,CAAkB;AAAEK,QAAAA,OAAO,EAAEvC;AAAX,OAAlB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAJJ,CAHJ,CAtCJ,EAwDI;AACI,MAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAII,oBAAC,MAAD;AACI,MAAA,OAAO,EAAGwD,aADd;AAEI,MAAA,QAAQ,EAAGxD,CAAC,IAAI,KAAKkC,WAAL,CAAkB;AAAEH,QAAAA,IAAI,EAAE/B,CAAC,CAACK;AAAV,OAAlB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAHJ,CAxDJ,EAqEI;AACI,MAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAGP,KAAK,IAAI,KAAKoC,WAAL,CAAkB;AAAEpC,QAAAA,KAAK,EAAEA;AAAT,OAAlB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAHJ,CArEJ,EAgFI;AACI,MAAA,SAAS,EAAC,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,wCAAhB;AACA,MAAA,OAAO,EAAG6B,EAAE,IAAI,KAAKoB,iBAAL,EADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEkB;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlB,CADJ,CADJ,EAOI;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,KAAK,EAAG,KAAKnD,KAAL,CAAWoC,UAFvB;AAGI,MAAA,SAAS,EAAC,cAHd;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,WAAW,EAAC,wDALhB;AAMI,MAAA,QAAQ,EAAGL,EAAE,IAAI,MAAM,CAAE,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAHJ,CAhFJ,EAoGI;AACI,MAAA,SAAS,EAAC,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACe;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADf,CADJ,EAII;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,KAAK,EAAG,KAAK/B,KAAL,CAAWqC,GAFvB;AAGI,MAAA,QAAQ,EAAGN,EAAE,IAAI,KAAKO,WAAL,CAAkB;AAAED,QAAAA,GAAG,EAAEN,EAAE,CAACC,MAAH,CAAUvB;AAAjB,OAAlB,CAHrB;AAII,MAAA,WAAW,EAAC,6IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAHJ,CApGJ,EAmHI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,OAAO,EAAGsB,EAAE,IAAI,KAAKS,aAAL,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,EAOI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CAnHJ,CARJ,CADJ;AA0IH;;AA5MmC;AA8MxC;;;;AAGA,MAAMoB,aAAa,GAAG,CAClB;AACInD,EAAAA,KAAK,EAAE,SADX;AAEIwC,EAAAA,KAAK,EAAE;AAFX,CADkB,EAKlB;AACIxC,EAAAA,KAAK,EAAE,QADX;AAEIwC,EAAAA,KAAK,EAAE;AAFX,CALkB,EASlB;AACIxC,EAAAA,KAAK,EAAE,UADX;AAEIwC,EAAAA,KAAK,EAAE;AAFX,CATkB,CAAtB;AAcA,OAAO,MAAMY,UAAN,SAAyBxE,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACtCW,KADsC,GAC9B;AACJS,MAAAA,KAAK,EAAE,EADH;AAEJyB,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,IAAI,EAAE;AAHF,KAD8B;AAAA;;AAMtCG,EAAAA,WAAW,CAAGC,IAAH,EAAU;AACjB,SAAK5B,QAAL,CAAe4B,IAAf;AACH;;AACDC,EAAAA,aAAa,GAAI;AACb3B,IAAAA,KAAK,CAAEnB,WAAF,EAAeD,OAAO,CAAE,KAAKO,KAAP,CAAtB,CAAL,CACCc,IADD,CACOC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADZ,EAECF,IAFD,CAEOG,CAAC,IAAI;AACR,UAAKA,CAAL,EAAS;AACLrB,QAAAA,cAAc,CAAE,+BAAF,CAAd;AACH,OAFD,MAEO;AACHA,QAAAA,cAAc,CAAE,kCAAF,CAAd;AACH;AACJ,KARD;AASH;;AACD+B,EAAAA,MAAM,GAAI;AACN,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAII;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAG,KAAK3B,KAAL,CAAWS,KAFvB;AAGI,MAAA,QAAQ,EAAGsB,EAAE,IAAI,KAAKO,WAAL,CAAkB;AAAE7B,QAAAA,KAAK,EAAEsB,EAAE,CAACC,MAAH,CAAUvB;AAAnB,OAAlB,CAHrB;AAII,MAAA,SAAS,EAAC,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAHJ,CADJ,EAgBI;AACI,MAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAII,oBAAC,MAAD;AACI,MAAA,OAAO,EAAGmD,aADd;AAEI,MAAA,QAAQ,EAAGxD,CAAC,IAAI,KAAKkC,WAAL,CAAkB;AAAEH,QAAAA,IAAI,EAAE/B,CAAC,CAACK;AAAV,OAAlB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAHJ,CAhBJ,EA6BI;AACI,MAAA,SAAS,EAAC,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAII;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,KAAK,EAAG,KAAKT,KAAL,CAAWkC,WAFvB;AAGI,MAAA,QAAQ,EAAGH,EAAE,IAAI,KAAKO,WAAL,CAAkB;AAAEJ,QAAAA,WAAW,EAAEH,EAAE,CAACC,MAAH,CAAUvB;AAAzB,OAAlB,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAHJ,CA7BJ,EA2CI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,OAAO,EAAGsB,EAAE,IAAI,KAAKS,aAAL,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,EAOI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CA3CJ,CARJ,CADJ;AAkEH;;AAvFqC;AAyF1C;;;;AAGA,OAAO,MAAMsB,UAAN,SAAyBzE,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACtCW,KADsC,GAC9B;AACJ8B,MAAAA,KAAK,EAAE,EADH;AAEJI,MAAAA,WAAW,EAAE,EAFT;AAGJL,MAAAA,IAAI,EAAE,EAHF;AAIJkC,MAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWwC;AAJd,KAD8B;AAAA;;AAOtCzB,EAAAA,WAAW,CAAGC,IAAH,EAAU;AACjB,SAAK5B,QAAL,CAAe4B,IAAf;AACH;;AACDC,EAAAA,aAAa,GAAI;AACb3B,IAAAA,KAAK,CAAErB,WAAF,EAAeC,OAAO,CAAE,KAAKO,KAAP,CAAtB,CAAL,CACCc,IADD,CACOC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADZ,EAECF,IAFD,CAEOG,CAAC,IAAI;AACR,UAAKA,CAAL,EAAS;AACLrB,QAAAA,cAAc,CAAE,+BAAF,CAAd;AACH,OAFD,MAEO;AACHA,QAAAA,cAAc,CAAE,kCAAF,CAAd;AACH;AACJ,KARD;AASH;;AACD+B,EAAAA,MAAM,GAAI;AACN,UAAMqC,YAAY,GAAG,CACjB;AACInC,MAAAA,IAAI,EAAE,MADV;AAEIoC,MAAAA,IAAI,EAAE,aAAatE,SAAS,CAAE,KAAK4B,KAAL,CAAWwC,KAAb,CAFhC;AAGIG,MAAAA,IAAI,EAAE,MAHV;AAIIC,MAAAA,GAAG,EAAE;AAJT,KADiB,EAOjB;AACItC,MAAAA,IAAI,EAAE,OADV;AAEIoC,MAAAA,IAAI,EAAE,OAFV;AAGIC,MAAAA,IAAI,EAAE,MAHV;AAIIC,MAAAA,GAAG,EAAE;AAJT,KAPiB,EAajB;AACItC,MAAAA,IAAI,EAAE,aADV;AAEIoC,MAAAA,IAAI,EAAE,iBAFV;AAGIC,MAAAA,IAAI,EAAE,MAHV;AAIIC,MAAAA,GAAG,EAAE;AAJT,KAbiB,CAArB;AAoBA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACmBxE,SAAS,CAAE,KAAK4B,KAAL,CAAWwC,KAAb,CAD5B,CADJ,CADJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,YAAY,CAAC3D,GAAb,CAAkB,CAAEC,CAAF,EAAKc,CAAL,KAAY;AAC1B,aACI;AACI,QAAA,SAAS,EAAG,mBAAmBd,CAAC,CAAC6D,GADrC;AAEI,QAAA,GAAG,EAAG/C,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMd,CAAC,CAAC2D,IADR,CADJ,EAII;AACI,QAAA,IAAI,EAAG3D,CAAC,CAAC4D,IADb;AAEI,QAAA,KAAK,EAAG,KAAKlE,KAAL,CAAYM,CAAC,CAACuB,IAAd,CAFZ;AAGI,QAAA,QAAQ,EAAGE,EAAE,IAAI,KAAKO,WAAL,CAAkB;AAAE,WAAEhC,CAAC,CAACuB,IAAJ,GAAYE,EAAE,CAACC,MAAH,CAAUvB;AAAxB,SAAlB,CAHrB;AAII,QAAA,SAAS,EAAC,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAJJ,CADJ;AAkBH,KAnBD,CAFR,EAuBI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,OAAO,EAAGsB,EAAE,IAAI,KAAKS,aAAL,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgB7C,SAAS,CAAE,KAAK4B,KAAL,CAAWwC,KAAb,CADzB,CAJJ,EAOI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CAvBJ,CARJ,CADJ;AA8CH;;AAxFqC;AA2F1C;;;;;;;AAMA,OAAO,MAAMK,gBAAN,SAA+B/E,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAC5CW,KAD4C,GACpC;AACJqE,MAAAA,IAAI,EAAE;AADF,KADoC;AAAA;;AAI5CC,EAAAA,UAAU,GAAI;AACVzD,IAAAA,KAAK,CAAE,KAAKU,KAAL,CAAWgD,GAAb,CAAL,CACCzD,IADD,CACOC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADZ,EAECF,IAFD,CAEOG,CAAC,IAAI,KAAKN,QAAL,CAAe;AAAE0D,MAAAA,IAAI,EAAIpD,CAAC,GAAGA,CAAC,CAACZ,GAAF,CAAOC,CAAC,IAAIT,cAAc,CAAES,CAAF,CAA1B,CAAH,GAAuC;AAAlD,KAAf,CAFZ;AAGH;;AACDM,EAAAA,iBAAiB,GAAI;AACjB,SAAK0D,UAAL;AACH;;AACDE,EAAAA,cAAc,GAAI;AACd,QAAK,KAAKjD,KAAL,CAAWkD,QAAhB,EAA2B;AACvB,aACI;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKlD,KAAL,CAAWkD,QAAX,CAAoBpE,GAApB,CAAyB,CAAEa,CAAF,EAAKwD,CAAL,KAAY;AACjC,eACI;AACI,UAAA,GAAG,EAAGA,CADV;AAEI,UAAA,SAAS,EAAC,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIMxD,CAJN,CADJ;AAQH,OATD,CAFR,CADJ;AAgBH;AACJ;;AACDyD,EAAAA,aAAa,CAAGrE,CAAH,EAAO;AAChB,QAAK,KAAKiB,KAAL,CAAWqD,MAAhB,EAAyB;AACrB,UAAKtE,CAAL,EAAS;AACL,eACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM,KAAKiB,KAAL,CAAWqD,MAAX,CAAmBtE,CAAnB,CADN,CADJ;AAKH;AACJ;AACJ;;AACDuE,EAAAA,aAAa,CAAGpE,KAAH,EAAW;AACpB,QAAKA,KAAL,EAAa;AACTI,MAAAA,KAAK,CAAE,KAAKU,KAAL,CAAWuD,UAAX,GAAwB,GAAxB,GAA8B,KAAKvD,KAAL,CAAWwC,KAAzC,GAAiD,GAAjD,GAAuDtD,KAAzD,CAAL,CACCK,IADD,CACOC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADZ,EAECF,IAFD,CAEOG,CAAC,IAAI;AACR,YAAKA,CAAL,EAAS;AACL,eAAKN,QAAL,CAAe;AAAE0D,YAAAA,IAAI,EAAEpD,CAAC,CAACZ,GAAF,CAAOC,CAAC,IAAIT,cAAc,CAAES,CAAF,CAA1B;AAAR,WAAf;AACH,SAFD,MAEO;AACH,eAAKgE,UAAL;AACH;AACJ,OARD;AASH,KAVD,MAUO;AACH,WAAKA,UAAL;AACH;AACJ;;AACDS,EAAAA,cAAc,GAAI;AACd,QAAK,KAAK/E,KAAL,CAAWqE,IAAX,CAAgBf,MAAhB,GAAyB,CAA9B,EAAkC;AAC9B,aAAO,KAAKtD,KAAL,CAAWqE,IAAX,CAAgBhE,GAAhB,CAAqB,CAAEC,CAAF,EAAKc,CAAL,KAAY;AACpC,eACI;AACI,UAAA,GAAG,EAAGA,CADV;AAEI,UAAA,SAAS,EAAC,wBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKQ,KAAKG,KAAL,CAAWyD,MAAX,CAAkB3E,GAAlB,CAAuB,CAAEa,CAAF,EAAKwD,CAAL,KAAY;AAC/B,iBACI;AACI,YAAA,GAAG,EAAGA,CADV;AAEI,YAAA,SAAS,EAAC,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIMpE,CAAC,CAAEY,CAAF,CAJP,CADJ;AAQH,SATD,CALR,EAgBM,KAAKyD,aAAL,CAAoBrE,CAApB,CAhBN,CADJ;AAoBH,OArBM,CAAP;AAsBH,KAvBD,MAuBO;AACH,aAAO,gBAAP;AACH;AACJ;;AACD2E,EAAAA,aAAa,GAAI;AACb,QAAK,KAAK1D,KAAL,CAAWE,MAAhB,EAAyB;AACrB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAII;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,QAAQ,EAAGM,EAAE,IAAI,KAAK8C,aAAL,CAAoB9C,EAAE,CAACC,MAAH,CAAUvB,KAA9B,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAYH;;AACD,WAAO,EAAP;AACH;;AACDkB,EAAAA,MAAM,GAAI;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKsD,aAAL,EADN,EAEI;AACI,MAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGM,KAAKT,cAAL,EAHN,EAIM,KAAKO,cAAL,EAJN,CAFJ,CADJ;AAWH;;AAnH2C;AAsHhD;;;;AAGA,MAAMV,IAAI,GAAG,CACT;AACIxC,EAAAA,IAAI,EAAE,UADV;AAEIoC,EAAAA,IAAI,EAAE,eAFV;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,GAAG,EAAE;AAJT,CADS,EAOT;AACItC,EAAAA,IAAI,EAAE,UADV;AAEIoC,EAAAA,IAAI,EAAE,YAFV;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,GAAG,EAAE;AAJT,CAPS,EAaT;AACItC,EAAAA,IAAI,EAAE,OADV;AAEIoC,EAAAA,IAAI,EAAE,UAFV;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,GAAG,EAAE;AAJT,CAbS,EAmBT;AACItC,EAAAA,IAAI,EAAE,OADV;AAEIoC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,IAAI,EAAE,OAHV;AAIIC,EAAAA,GAAG,EAAE;AAJT,CAnBS,EAyBT;AACItC,EAAAA,IAAI,EAAE,SADV;AAEIoC,EAAAA,IAAI,EAAE,UAFV;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,GAAG,EAAE;AAJT,CAzBS,EA+BT;AACItC,EAAAA,IAAI,EAAE,KADV;AAEIoC,EAAAA,IAAI,EAAE,WAFV;AAGIC,EAAAA,IAAI,EAAE,MAHV;AAIIC,EAAAA,GAAG,EAAE;AAJT,CA/BS,CAAb;AAuCA,OAAO,MAAMe,WAAN,SAA0B7F,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACvCW,KADuC,GAC/B;AACJ2D,MAAAA,QAAQ,EAAE,EADN;AAEJwB,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,KAAK,EAAE,EAJH;AAKJC,MAAAA,OAAO,EAAE,EALL;AAMJvB,MAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWwC,KANd;AAOJwB,MAAAA,GAAG,EAAE;AAPD,KAD+B;AAAA;;AAUvCjD,EAAAA,WAAW,CAAGC,IAAH,EAAU;AACjB,SAAK5B,QAAL,CAAe4B,IAAf;AACH;;AACDC,EAAAA,aAAa,GAAI;AACb3B,IAAAA,KAAK,CAAEtB,SAAF,EAAaE,OAAO,CAAE,KAAKO,KAAP,CAApB,CAAL,CACCc,IADD,CACOC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADZ,EAECF,IAFD,CAEOG,CAAC,IAAI;AACR,UAAKA,CAAL,EAAS;AACLrB,QAAAA,cAAc,CAAE,iCAAF,CAAd;AACH,OAFD,MAEO;AACHA,QAAAA,cAAc,CAAE,kCAAF,CAAd;AACH;AACJ,KARD;AASH;;AACD+B,EAAAA,MAAM,GAAI;AACN,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ0C,IAAI,CAAChE,GAAL,CAAU,CAAEC,CAAF,EAAKc,CAAL,KAAY;AAClB,aACI;AACI,QAAA,SAAS,EAAG,mBAAmBd,CAAC,CAAC6D,GADrC;AAEI,QAAA,GAAG,EAAG/C,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMd,CAAC,CAAC2D,IADR,CADJ,EAII;AACI,QAAA,IAAI,EAAG3D,CAAC,CAAC4D,IADb;AAEI,QAAA,KAAK,EAAG,KAAKlE,KAAL,CAAYM,CAAC,CAACuB,IAAd,CAFZ;AAGI,QAAA,QAAQ,EAAGE,EAAE,IAAI,KAAKO,WAAL,CAAkB;AAAE,WAAEhC,CAAC,CAACuB,IAAJ,GAAYE,EAAE,CAACC,MAAH,CAAUvB;AAAxB,SAAlB,CAHrB;AAII,QAAA,SAAS,EAAC,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAJJ,CADJ;AAkBH,KAnBD,CAFR,CADJ,CADJ;AA4BH;;AArDsC;AAwD3C,eAAe,MAAM+E,WAAN,SAA0BnG,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CW,KAD+C,GACvC;AACJ2D,MAAAA,QAAQ,EAAE,EADN;AAEJwB,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,KAAK,EAAE,EAJH;AAKJC,MAAAA,OAAO,EAAE,EALL;AAMJvB,MAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWwC,KANd;AAOJwB,MAAAA,GAAG,EAAE;AAPD,KADuC;AAAA;;AAU/CjD,EAAAA,WAAW,CAAGC,IAAH,EAAU;AACjB,SAAK5B,QAAL,CAAe4B,IAAf;AACH;;AACDC,EAAAA,aAAa,GAAI;AACb3B,IAAAA,KAAK,CAAEtB,SAAF,EAAaE,OAAO,CAAE,KAAKO,KAAP,CAApB,CAAL,CACCc,IADD,CACOC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADZ,EAECF,IAFD,CAEOG,CAAC,IAAI;AACR,UAAKA,CAAL,EAAS;AACLrB,QAAAA,cAAc,CAAE,iCAAF,CAAd;AACH,OAFD,MAEO;AACHA,QAAAA,cAAc,CAAE,kCAAF,CAAd;AACH;AACJ,KARD;AASH;;AACD+B,EAAAA,MAAM,GAAI;AACN,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACgB;AAAM,MAAA,SAAS,EAAG,4BAA6B,KAAKJ,KAAL,CAAWwC,KAAX,KAAqB,UAArB,GAAkC,QAAlC,GAA6C,SAA1E,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4GpE,SAAS,CAAE,KAAK4B,KAAL,CAAWwC,KAAb,CAArH,CADhB,CADJ,CADJ,EAOQM,IAAI,CAAChE,GAAL,CAAU,CAAEC,CAAF,EAAKc,CAAL,KAAY;AAClB,aACI;AACI,QAAA,SAAS,EAAG,mBAAmBd,CAAC,CAAC6D,GADrC;AAEI,QAAA,GAAG,EAAG/C,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMd,CAAC,CAAC2D,IADR,CADJ,EAII;AACI,QAAA,IAAI,EAAG3D,CAAC,CAAC4D,IADb;AAEI,QAAA,KAAK,EAAG,KAAKlE,KAAL,CAAYM,CAAC,CAACuB,IAAd,CAFZ;AAGI,QAAA,QAAQ,EAAGE,EAAE,IAAI,KAAKO,WAAL,CAAkB;AAAE,WAAEhC,CAAC,CAACuB,IAAJ,GAAYE,EAAE,CAACC,MAAH,CAAUvB;AAAxB,SAAlB,CAHrB;AAII,QAAA,SAAS,EAAC,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAJJ,CADJ;AAkBH,KAnBD,CAPR,EA4BI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,OAAO,EAAGsB,EAAE,IAAI,KAAKS,aAAL,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,EAOI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CA5BJ,CADJ,CADJ;AA4CH;;AArE8C","sourcesContent":["import React, {\n    Component\n} from \"react\";\nimport Select from 'react-select';\n\nimport {\n    peopleUrl,\n    productsUrl,\n    getInit,\n    paymentsUrl,\n    scopeName,\n} from '../../settings';\nimport {\n    responseWindow,\n    unPrefixObject\n} from \"../../functions\";\n\nimport Http from '../http';\n\n\nexport class Products extends Component {\n    state = {\n        options: [],\n        items: []\n    };\n\n    componentDidMount () {\n        fetch( productsUrl + \"?product_scope=product\" )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                const options = j.map( x => {\n                    let y = unPrefixObject( x );\n                    y.amount = 0;\n                    return y;\n                } );\n                this.setState( { options: options } );\n            }\n        } );\n    }\n    itemsHandler = v => {\n        if ( v ) {\n            const items = v.map( x => {\n                if ( ! this.state.items.some( item => item.value === x.value ) ) {\n                    x.amount = 1;\n                }\n                return x;\n            } );\n            this.setState( { items: items } );\n        }\n    };\n\n    changeHandler ( item, amount ) {\n        const options = this.state.options.map( i => {\n            if ( i.id === item.id ) {\n                let nItem = item;\n                nItem.amount = amount\n                return nItem;\n            }\n            return i;\n        } );\n        this.setState(\n            { options: options },\n            () => {\n                if ( this.props.onChange ) {\n                    this.props.onChange( this.state.options.filter( op => op.amount > 0 ) )\n                }\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                { this.state.options.map( ( option, i ) => {\n                    return (\n                        <div key={ i } >\n                            <span>\n                                <strong>{ option.name }</strong>\n                                <span className=\"text-success px-2\">{ option.price }</span>\n                            </span>\n                            \n                            <div className=\"ml-auto\">\n                                <input\n                                    type=\"number\"\n                                    min=\"0\"\n                                    className=\"form-control\"\n                                    value={ option.amount }\n                                    onChange={ ev => this.changeHandler( option, ev.target.value ) }\n                                />\n                            </div>\n                        </div>\n                    );\n                } ) }\n            </div>\n        );\n    }\n}\n\n\nexport class NewOrder extends Component {\n    state = {\n        value: \"\",\n        description: \"\",\n        mode: \"\",\n        totalPrice: \"\",\n        items: [],\n        obs: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        if (\n            this.state.customerId\n            &&\n            this.state.employeeId\n            &&\n            this.state.service\n            &&\n            this.state.mode\n            &&\n            this.state.employeeId\n        ) {\n            const pDescription = \"Produtos:\" + this.state.items.map( x => x.name + \"(x\" + x.amount + \")\" ).join( \",\" );\n            console.log( typeof \"\" + this.state.totalPrice )\n            // if ( ! this.state.totalPrice.match( /,/ ) ) {\n            // }\n            const body = {\n                customerId: this.state.customerId,\n                employeeId: this.state.employeeId,\n                service: this.state.service.label,\n                mode: this.state.mode,\n                description: pDescription + \"|\" + this.state.obs,\n                value: this.state.totalPrice,\n            }\n            console.log( \"body\", body )\n            // fetch( paymentsUrl, getInit( body ) )\n            // .then( r => r.json() )\n            // .then( j => {\n            //     if ( j ) {\n            //         responseWindow( \"Pedido cadastrado com sucesso.\" );\n            //     } else {\n            //         responseWindow( \"Preencha os campos obrigatórios.\" );\n            //     }\n            // } )\n        } else {\n            alert( \"Preencha os campos acima antes de registrar.\" );\n        }\n    }\n    totalPriceHandler () {\n        if ( ! this.state.service ) {\n            alert( \"Escolha o serviço, por favor.\" );\n        } else {\n            let totalValue = parseFloat( this.state.service.price );\n            if ( this.state.items.length > 0 ) {\n                const productsValue = this.state.items.map( item => {\n                    return parseFloat( item.price )*parseFloat( item.amount )\n                } )\n                .reduce( ( total, currentValue ) => total + currentValue, 0 );\n                totalValue = totalValue + productsValue;\n            }\n            this.setState( { totalPrice: totalValue } );\n        }\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Registro de Pedido\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Cliente\n                            </small>\n                            <Http\n                                url={ peopleUrl + \"?person_scope=customer\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.id, label: y.fullName } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { customerId: v.label } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Funcionário/a\n                            </small>\n                            <Http\n                                url={ peopleUrl + \"?person_scope=employee\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.id, label: y.fullName } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { employeeId: v.label } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    {/*  */}\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Serviço\n                            </small>\n                            <Http\n                                url={ productsUrl + \"?product_scope=service\" }\n                                responseHandler={ j => j.map( x => unPrefixObject( x ) ).map( y => ( { value: y.name, label: y.name, price: y.price } ) ) }\n                                propName=\"options\"\n                            >\n                                <Select\n                                    onChange={ v => this.updateState( { service: v } ) }\n                                />\n                            </Http>\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Modo de Pagamento\n                            </small>\n                            <Select\n                                options={ paymentsModes }\n                                onChange={ v => this.updateState( { mode: v.value } ) }\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <div className=\"d-block my-2\">\n                            <small>\n                                Produtos\n                            </small>\n                            <Products onChange={ items => this.updateState( { items: items } ) } />\n                        </div>\n                    </div>\n                    \n                    <div\n                        className=\"col-12\"\n                    >\n                        <div className=\"input-group mb-3 mt-4\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text text-white bg-success\"\n                                onClick={ ev => this.totalPriceHandler() }>\n                                    Calular valor <i className=\"fas fa-arrow-right mx-2\"></i>\n                                </span>\n                            </div>\n                            <input\n                                disabled\n                                value={ this.state.totalPrice }\n                                className=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Clique no botão ao lado para calcular o valor final\"\n                                onChange={ ev => () => {} }\n                            />\n                        </div>\n                    </div>\n                    <div\n                        className=\"col-12\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Observação <small className=\"text-muted\">(opcional)</small>\n                            </small>\n                            <textarea\n                                className=\"form-control\"\n                                value={ this.state.obs }\n                                onChange={ ev => this.updateState( { obs: ev.target.value } ) }\n                                placeholder=\"Descreva alguma situação fora do comum que o sistema não possa identificar de forma automática pelas operações padrão.\"\n                            ></textarea>\n                        </label>\n                    </div>\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Registrar Pedido\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * \n */\nconst paymentsModes = [\n    {\n        value: \"Crédito\",\n        label: \"Crédito\",\n    },\n    {\n        value: \"Débito\",\n        label: \"Débito\",\n    },\n    {\n        value: \"Dinheiro\",\n        label: \"Dinheiro\",\n    }\n]\nexport class NewPayment extends Component {\n    state = {\n        value: \"\",\n        description: \"\",\n        mode: \"\",\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( paymentsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Dados do Pagamento\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Valor\n                            </small>\n                            <input\n                                type=\"text\"\n                                value={ this.state.value }\n                                onChange={ ev => this.updateState( { value: ev.target.value } ) }\n                                className=\"form-control\"\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12 col-sm-6\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Modo de Pagamento\n                            </small>\n                            <Select\n                                options={ paymentsModes }\n                                onChange={ v => this.updateState( { mode: v.value } ) }\n                            />\n                        </label>\n                    </div>\n                    <div\n                        className=\"col-12\"\n                    >\n                        <label className=\"d-block my-2\">\n                            <small>\n                                Descrição ou observação\n                            </small>\n                            <textarea\n                                className=\"form-control\"\n                                value={ this.state.description }\n                                onChange={ ev => this.updateState( { description: ev.target.value } ) }\n                            ></textarea>\n                        </label>\n                    </div>\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Registrar Pagamento\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * \n */\nexport class NewProduct extends Component {\n    state = {\n        price: \"\",\n        description: \"\",\n        name: \"\",\n        scope: this.props.scope,\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( productsUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Produto cadastro com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        const productsData = [\n            {\n                name: \"name\",\n                text: \"Nome do \" + scopeName( this.props.scope ),\n                type: \"text\",\n                col: \"6\",\n            },\n            {\n                name: \"price\",\n                text: \"Preço\",\n                type: \"text\",\n                col: \"6\",\n            },\n            {\n                name: \"description\",\n                text: \"Breve descrição\",\n                type: \"text\",\n                col: \"12\",\n            }\n        ]\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"d-block my-3\">\n                            Cadastre seu { scopeName( this.props.scope ) }\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        productsData.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Cadastrar { scopeName( this.props.scope ) }\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n/**\n * url: string url\n * fields: array of { component: JSX* }; *: must render data as children (JSX just a frame)\n * append: JSX append to each row\n * preppend: list header array of strings\n */\nexport class SeeWithoutPrefix extends Component {\n    state = {\n        data: []\n    }\n    initialize () {\n        fetch( this.props.url )\n        .then( r => r.json() )\n        .then( j => this.setState( { data: ( j ? j.map( x => unPrefixObject( x ) ) : [] ) } ) );\n    }\n    componentDidMount () {\n        this.initialize();\n    }\n    preppendHander () {\n        if ( this.props.preppend ) {\n            return (\n                <li className=\"list-group-item d-flex\">\n                    {\n                        this.props.preppend.map( ( y, k ) => {\n                            return ( \n                                <div\n                                    key={ k }\n                                    className=\"m-auto py-1\"\n                                >\n                                    { y }\n                                </div>\n                            )\n                        } )\n                    }\n                </li>\n            )\n        }\n    }\n    appendHandler ( x ) {\n        if ( this.props.append ) {\n            if ( x ) {\n                return (\n                    <div className=\"ml-auto my-auto\">\n                        { this.props.append( x ) }\n                    </div>\n                );\n            }\n        }\n    }\n    finderHandler ( value ) {\n        if ( value ) {\n            fetch( this.props.withFinder + \"/\" + this.props.scope + \"/\" + value )\n            .then( r => r.json() )\n            .then( j => {\n                if ( j ) {\n                    this.setState( { data: j.map( x => unPrefixObject( x ) ) } );\n                } else {\n                    this.initialize();\n                }\n            } )\n        } else {\n            this.initialize();\n        }\n    }\n    contentHandler () {\n        if ( this.state.data.length > 0 ) {\n            return this.state.data.map( ( x, i ) => {\n                return(\n                    <li\n                        key={ i }\n                        className=\"list-group-item d-flex\"\n                    >\n                        {\n                            this.props.fields.map( ( y, k ) => {\n                                return ( \n                                    <td\n                                        key={ k }\n                                        className=\"m-auto py-2\"\n                                    >\n                                        { x[ y ] }\n                                    </td>\n                                )\n                            } ) \n                        }\n                        { this.appendHandler( x ) }\n                    </li>\n                );\n            } )\n        } else {\n            return \"Sem registros.\"\n        }\n    }\n    filterHandler () {\n        if ( this.props.filter ) {\n            return (\n                <label>\n                    <small>\n                        Busca por nome\n                    </small>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        onChange={ ev => this.finderHandler( ev.target.value ) }\n                    />\n                </label>\n            )\n        }\n        return \"\"\n    }\n    render () {\n        return (\n            <div>\n                { this.filterHandler() }\n                <ul\n                    className=\"list-group\"\n                >\n                    { this.preppendHander() }\n                    { this.contentHandler() }\n                </ul>\n            </div>\n        );\n    }\n}\n\n/**\n * \n */\nconst data = [\n    {\n        name: \"fullName\",\n        text: \"Nome Completo\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"birthday\",\n        text: \"Nascimento\",\n        type: \"date\",\n        col: \"6\",\n    },\n    {\n        name: \"phone\",\n        text: \"Telefone\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"email\",\n        text: \"email\",\n        type: \"email\",\n        col: \"6\",\n    },\n    {\n        name: \"address\",\n        text: \"Endereço\",\n        type: \"text\",\n        col: \"6\",\n    },\n    {\n        name: \"doc\",\n        text: \"Documento\",\n        type: \"text\",\n        col: \"6\",\n    },\n]\n\nexport class MoreGeneral extends Component {\n    state = {\n        fullName: \"\",\n        birthday: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        scope: this.props.scope,\n        doc: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( peopleUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Cadastro realizado com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container p-0\">\n                <div className=\"form-group row\">\n                    {\n                        data.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class NewCustomer extends Component {\n    state = {\n        fullName: \"\",\n        birthday: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        scope: this.props.scope,\n        doc: \"\"\n    }\n    updateState ( pair ) {\n        this.setState( pair );\n    }\n    submitHandler () {\n        fetch( peopleUrl, getInit( this.state ) )\n        .then( r => r.json() )\n        .then( j => {\n            if ( j ) {\n                responseWindow( \"Cadastro realizado com sucesso.\" );\n            } else {\n                responseWindow( \"Preencha os campos obrigatórios.\" );\n            }\n        } )\n    }\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-12\">\n                        <h4 className=\"mb-3\">\n                            Cadastrando <span className={ \"font-weight-bold text-\" + ( this.props.scope === \"employee\" ? \"danger\" : \"success\" ) }>{ scopeName( this.props.scope ) }</span>\n                        </h4>\n                    </div>\n                    {\n                        data.map( ( x, i ) => {\n                            return (\n                                <div\n                                    className={ \"col-12 col-sm-\" + x.col }\n                                    key={ i }\n                                >\n                                    <label className=\"d-block my-2\">\n                                        <small>\n                                            { x.text } \n                                        </small>\n                                        <input\n                                            type={ x.type }\n                                            value={ this.state[ x.name ] }\n                                            onChange={ ev => this.updateState( { [ x.name ]: ev.target.value } ) }\n                                            className=\"form-control\"\n                                        />\n                                    </label>\n                                </div>\n                            );\n                        } )\n                    }\n                    <div className=\"col-12 text-center my-3\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={ ev => this.submitHandler() }\n                        >\n                            <span className=\"mx-1\">\n                                Confirmar cadastro\n                            </span>\n                            <i className=\"fas fa-check\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}